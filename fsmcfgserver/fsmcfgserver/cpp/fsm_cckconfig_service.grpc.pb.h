// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: fsm_cckconfig_service.proto
#ifndef GRPC_fsm_5fcckconfig_5fservice_2eproto__INCLUDED
#define GRPC_fsm_5fcckconfig_5fservice_2eproto__INCLUDED

#include "fsm_cckconfig_service.pb.h"

#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/method_handler_impl.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace fsm {

class CCKConfig final {
 public:
  static constexpr char const* service_full_name() {
    return "fsm.CCKConfig";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetCfgMN401(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::fsm::MN401* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN401>> AsyncGetCfgMN401(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN401>>(AsyncGetCfgMN401Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN401>> PrepareAsyncGetCfgMN401(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN401>>(PrepareAsyncGetCfgMN401Raw(context, request, cq));
    }
    virtual ::grpc::Status GetCfgMN(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::fsm::MN* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN>> AsyncGetCfgMN(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN>>(AsyncGetCfgMNRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN>> PrepareAsyncGetCfgMN(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN>>(PrepareAsyncGetCfgMNRaw(context, request, cq));
    }
    virtual ::grpc::Status GetCfgPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::fsm::P0* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::P0>> AsyncGetCfgPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::P0>>(AsyncGetCfgPORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::P0>> PrepareAsyncGetCfgPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::P0>>(PrepareAsyncGetCfgPORaw(context, request, cq));
    }
    virtual ::grpc::Status GetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::fsm::VirtP0* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::VirtP0>> AsyncGetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::VirtP0>>(AsyncGetCfgVirtPORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::VirtP0>> PrepareAsyncGetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::VirtP0>>(PrepareAsyncGetCfgVirtPORaw(context, request, cq));
    }
    virtual ::grpc::Status SetCfgMN401(::grpc::ClientContext* context, const ::fsm::MN401& request, ::fsm::SetDeviceResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>> AsyncSetCfgMN401(::grpc::ClientContext* context, const ::fsm::MN401& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>>(AsyncSetCfgMN401Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>> PrepareAsyncSetCfgMN401(::grpc::ClientContext* context, const ::fsm::MN401& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>>(PrepareAsyncSetCfgMN401Raw(context, request, cq));
    }
    virtual ::grpc::Status SetCfgMN(::grpc::ClientContext* context, const ::fsm::MN& request, ::fsm::SetDeviceResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>> AsyncSetCfgMN(::grpc::ClientContext* context, const ::fsm::MN& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>>(AsyncSetCfgMNRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>> PrepareAsyncSetCfgMN(::grpc::ClientContext* context, const ::fsm::MN& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>>(PrepareAsyncSetCfgMNRaw(context, request, cq));
    }
    virtual ::grpc::Status SetCfgPO(::grpc::ClientContext* context, const ::fsm::P0& request, ::fsm::SetDeviceResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>> AsyncSetCfgPO(::grpc::ClientContext* context, const ::fsm::P0& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>>(AsyncSetCfgPORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>> PrepareAsyncSetCfgPO(::grpc::ClientContext* context, const ::fsm::P0& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>>(PrepareAsyncSetCfgPORaw(context, request, cq));
    }
    virtual ::grpc::Status SetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::fsm::SetDeviceResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>> AsyncSetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>>(AsyncSetCfgVirtPORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>> PrepareAsyncSetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>>(PrepareAsyncSetCfgVirtPORaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN401>* AsyncGetCfgMN401Raw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN401>* PrepareAsyncGetCfgMN401Raw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN>* AsyncGetCfgMNRaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::MN>* PrepareAsyncGetCfgMNRaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::P0>* AsyncGetCfgPORaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::P0>* PrepareAsyncGetCfgPORaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::VirtP0>* AsyncGetCfgVirtPORaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::VirtP0>* PrepareAsyncGetCfgVirtPORaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>* AsyncSetCfgMN401Raw(::grpc::ClientContext* context, const ::fsm::MN401& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>* PrepareAsyncSetCfgMN401Raw(::grpc::ClientContext* context, const ::fsm::MN401& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>* AsyncSetCfgMNRaw(::grpc::ClientContext* context, const ::fsm::MN& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>* PrepareAsyncSetCfgMNRaw(::grpc::ClientContext* context, const ::fsm::MN& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>* AsyncSetCfgPORaw(::grpc::ClientContext* context, const ::fsm::P0& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>* PrepareAsyncSetCfgPORaw(::grpc::ClientContext* context, const ::fsm::P0& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>* AsyncSetCfgVirtPORaw(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::fsm::SetDeviceResp>* PrepareAsyncSetCfgVirtPORaw(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status GetCfgMN401(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::fsm::MN401* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::MN401>> AsyncGetCfgMN401(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::MN401>>(AsyncGetCfgMN401Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::MN401>> PrepareAsyncGetCfgMN401(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::MN401>>(PrepareAsyncGetCfgMN401Raw(context, request, cq));
    }
    ::grpc::Status GetCfgMN(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::fsm::MN* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::MN>> AsyncGetCfgMN(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::MN>>(AsyncGetCfgMNRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::MN>> PrepareAsyncGetCfgMN(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::MN>>(PrepareAsyncGetCfgMNRaw(context, request, cq));
    }
    ::grpc::Status GetCfgPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::fsm::P0* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::P0>> AsyncGetCfgPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::P0>>(AsyncGetCfgPORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::P0>> PrepareAsyncGetCfgPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::P0>>(PrepareAsyncGetCfgPORaw(context, request, cq));
    }
    ::grpc::Status GetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::fsm::VirtP0* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::VirtP0>> AsyncGetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::VirtP0>>(AsyncGetCfgVirtPORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::VirtP0>> PrepareAsyncGetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::VirtP0>>(PrepareAsyncGetCfgVirtPORaw(context, request, cq));
    }
    ::grpc::Status SetCfgMN401(::grpc::ClientContext* context, const ::fsm::MN401& request, ::fsm::SetDeviceResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>> AsyncSetCfgMN401(::grpc::ClientContext* context, const ::fsm::MN401& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>>(AsyncSetCfgMN401Raw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>> PrepareAsyncSetCfgMN401(::grpc::ClientContext* context, const ::fsm::MN401& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>>(PrepareAsyncSetCfgMN401Raw(context, request, cq));
    }
    ::grpc::Status SetCfgMN(::grpc::ClientContext* context, const ::fsm::MN& request, ::fsm::SetDeviceResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>> AsyncSetCfgMN(::grpc::ClientContext* context, const ::fsm::MN& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>>(AsyncSetCfgMNRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>> PrepareAsyncSetCfgMN(::grpc::ClientContext* context, const ::fsm::MN& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>>(PrepareAsyncSetCfgMNRaw(context, request, cq));
    }
    ::grpc::Status SetCfgPO(::grpc::ClientContext* context, const ::fsm::P0& request, ::fsm::SetDeviceResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>> AsyncSetCfgPO(::grpc::ClientContext* context, const ::fsm::P0& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>>(AsyncSetCfgPORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>> PrepareAsyncSetCfgPO(::grpc::ClientContext* context, const ::fsm::P0& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>>(PrepareAsyncSetCfgPORaw(context, request, cq));
    }
    ::grpc::Status SetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::fsm::SetDeviceResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>> AsyncSetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>>(AsyncSetCfgVirtPORaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>> PrepareAsyncSetCfgVirtPO(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>>(PrepareAsyncSetCfgVirtPORaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::fsm::MN401>* AsyncGetCfgMN401Raw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::MN401>* PrepareAsyncGetCfgMN401Raw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::MN>* AsyncGetCfgMNRaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::MN>* PrepareAsyncGetCfgMNRaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::P0>* AsyncGetCfgPORaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::P0>* PrepareAsyncGetCfgPORaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::VirtP0>* AsyncGetCfgVirtPORaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::VirtP0>* PrepareAsyncGetCfgVirtPORaw(::grpc::ClientContext* context, const ::fsm::GetDeviceRq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>* AsyncSetCfgMN401Raw(::grpc::ClientContext* context, const ::fsm::MN401& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>* PrepareAsyncSetCfgMN401Raw(::grpc::ClientContext* context, const ::fsm::MN401& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>* AsyncSetCfgMNRaw(::grpc::ClientContext* context, const ::fsm::MN& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>* PrepareAsyncSetCfgMNRaw(::grpc::ClientContext* context, const ::fsm::MN& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>* AsyncSetCfgPORaw(::grpc::ClientContext* context, const ::fsm::P0& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>* PrepareAsyncSetCfgPORaw(::grpc::ClientContext* context, const ::fsm::P0& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>* AsyncSetCfgVirtPORaw(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::fsm::SetDeviceResp>* PrepareAsyncSetCfgVirtPORaw(::grpc::ClientContext* context, const ::fsm::VirtP0& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetCfgMN401_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCfgMN_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCfgPO_;
    const ::grpc::internal::RpcMethod rpcmethod_GetCfgVirtPO_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCfgMN401_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCfgMN_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCfgPO_;
    const ::grpc::internal::RpcMethod rpcmethod_SetCfgVirtPO_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetCfgMN401(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN401* response);
    virtual ::grpc::Status GetCfgMN(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN* response);
    virtual ::grpc::Status GetCfgPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::P0* response);
    virtual ::grpc::Status GetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::VirtP0* response);
    virtual ::grpc::Status SetCfgMN401(::grpc::ServerContext* context, const ::fsm::MN401* request, ::fsm::SetDeviceResp* response);
    virtual ::grpc::Status SetCfgMN(::grpc::ServerContext* context, const ::fsm::MN* request, ::fsm::SetDeviceResp* response);
    virtual ::grpc::Status SetCfgPO(::grpc::ServerContext* context, const ::fsm::P0* request, ::fsm::SetDeviceResp* response);
    virtual ::grpc::Status SetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::VirtP0* request, ::fsm::SetDeviceResp* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCfgMN401 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetCfgMN401() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetCfgMN401() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgMN401(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN401* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCfgMN401(::grpc::ServerContext* context, ::fsm::GetDeviceRq* request, ::grpc::ServerAsyncResponseWriter< ::fsm::MN401>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCfgMN : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetCfgMN() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetCfgMN() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgMN(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCfgMN(::grpc::ServerContext* context, ::fsm::GetDeviceRq* request, ::grpc::ServerAsyncResponseWriter< ::fsm::MN>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCfgPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetCfgPO() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetCfgPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::P0* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCfgPO(::grpc::ServerContext* context, ::fsm::GetDeviceRq* request, ::grpc::ServerAsyncResponseWriter< ::fsm::P0>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetCfgVirtPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetCfgVirtPO() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetCfgVirtPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::VirtP0* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCfgVirtPO(::grpc::ServerContext* context, ::fsm::GetDeviceRq* request, ::grpc::ServerAsyncResponseWriter< ::fsm::VirtP0>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCfgMN401 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetCfgMN401() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SetCfgMN401() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgMN401(::grpc::ServerContext* context, const ::fsm::MN401* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCfgMN401(::grpc::ServerContext* context, ::fsm::MN401* request, ::grpc::ServerAsyncResponseWriter< ::fsm::SetDeviceResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCfgMN : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetCfgMN() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SetCfgMN() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgMN(::grpc::ServerContext* context, const ::fsm::MN* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCfgMN(::grpc::ServerContext* context, ::fsm::MN* request, ::grpc::ServerAsyncResponseWriter< ::fsm::SetDeviceResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCfgPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetCfgPO() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SetCfgPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgPO(::grpc::ServerContext* context, const ::fsm::P0* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCfgPO(::grpc::ServerContext* context, ::fsm::P0* request, ::grpc::ServerAsyncResponseWriter< ::fsm::SetDeviceResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetCfgVirtPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetCfgVirtPO() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SetCfgVirtPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::VirtP0* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCfgVirtPO(::grpc::ServerContext* context, ::fsm::VirtP0* request, ::grpc::ServerAsyncResponseWriter< ::fsm::SetDeviceResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetCfgMN401<WithAsyncMethod_GetCfgMN<WithAsyncMethod_GetCfgPO<WithAsyncMethod_GetCfgVirtPO<WithAsyncMethod_SetCfgMN401<WithAsyncMethod_SetCfgMN<WithAsyncMethod_SetCfgPO<WithAsyncMethod_SetCfgVirtPO<Service > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_GetCfgMN401 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetCfgMN401() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetCfgMN401() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgMN401(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN401* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCfgMN : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetCfgMN() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetCfgMN() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgMN(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCfgPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetCfgPO() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetCfgPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::P0* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetCfgVirtPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetCfgVirtPO() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetCfgVirtPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::VirtP0* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCfgMN401 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetCfgMN401() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SetCfgMN401() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgMN401(::grpc::ServerContext* context, const ::fsm::MN401* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCfgMN : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetCfgMN() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SetCfgMN() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgMN(::grpc::ServerContext* context, const ::fsm::MN* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCfgPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetCfgPO() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SetCfgPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgPO(::grpc::ServerContext* context, const ::fsm::P0* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetCfgVirtPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetCfgVirtPO() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SetCfgVirtPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::VirtP0* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCfgMN401 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetCfgMN401() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetCfgMN401() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgMN401(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN401* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCfgMN401(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCfgMN : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetCfgMN() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetCfgMN() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgMN(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCfgMN(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCfgPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetCfgPO() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetCfgPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::P0* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCfgPO(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetCfgVirtPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_GetCfgVirtPO() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetCfgVirtPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::VirtP0* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetCfgVirtPO(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCfgMN401 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetCfgMN401() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SetCfgMN401() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgMN401(::grpc::ServerContext* context, const ::fsm::MN401* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCfgMN401(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCfgMN : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetCfgMN() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SetCfgMN() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgMN(::grpc::ServerContext* context, const ::fsm::MN* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCfgMN(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCfgPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetCfgPO() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SetCfgPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgPO(::grpc::ServerContext* context, const ::fsm::P0* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCfgPO(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetCfgVirtPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithRawMethod_SetCfgVirtPO() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SetCfgVirtPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::VirtP0* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetCfgVirtPO(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCfgMN401 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetCfgMN401() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler< ::fsm::GetDeviceRq, ::fsm::MN401>(std::bind(&WithStreamedUnaryMethod_GetCfgMN401<BaseClass>::StreamedGetCfgMN401, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetCfgMN401() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCfgMN401(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN401* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCfgMN401(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fsm::GetDeviceRq,::fsm::MN401>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCfgMN : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetCfgMN() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler< ::fsm::GetDeviceRq, ::fsm::MN>(std::bind(&WithStreamedUnaryMethod_GetCfgMN<BaseClass>::StreamedGetCfgMN, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetCfgMN() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCfgMN(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::MN* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCfgMN(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fsm::GetDeviceRq,::fsm::MN>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCfgPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetCfgPO() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler< ::fsm::GetDeviceRq, ::fsm::P0>(std::bind(&WithStreamedUnaryMethod_GetCfgPO<BaseClass>::StreamedGetCfgPO, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetCfgPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCfgPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::P0* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCfgPO(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fsm::GetDeviceRq,::fsm::P0>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetCfgVirtPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetCfgVirtPO() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler< ::fsm::GetDeviceRq, ::fsm::VirtP0>(std::bind(&WithStreamedUnaryMethod_GetCfgVirtPO<BaseClass>::StreamedGetCfgVirtPO, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetCfgVirtPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::GetDeviceRq* request, ::fsm::VirtP0* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetCfgVirtPO(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fsm::GetDeviceRq,::fsm::VirtP0>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCfgMN401 : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetCfgMN401() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler< ::fsm::MN401, ::fsm::SetDeviceResp>(std::bind(&WithStreamedUnaryMethod_SetCfgMN401<BaseClass>::StreamedSetCfgMN401, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetCfgMN401() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCfgMN401(::grpc::ServerContext* context, const ::fsm::MN401* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCfgMN401(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fsm::MN401,::fsm::SetDeviceResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCfgMN : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetCfgMN() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler< ::fsm::MN, ::fsm::SetDeviceResp>(std::bind(&WithStreamedUnaryMethod_SetCfgMN<BaseClass>::StreamedSetCfgMN, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetCfgMN() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCfgMN(::grpc::ServerContext* context, const ::fsm::MN* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCfgMN(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fsm::MN,::fsm::SetDeviceResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCfgPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetCfgPO() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler< ::fsm::P0, ::fsm::SetDeviceResp>(std::bind(&WithStreamedUnaryMethod_SetCfgPO<BaseClass>::StreamedSetCfgPO, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetCfgPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCfgPO(::grpc::ServerContext* context, const ::fsm::P0* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCfgPO(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fsm::P0,::fsm::SetDeviceResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetCfgVirtPO : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetCfgVirtPO() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler< ::fsm::VirtP0, ::fsm::SetDeviceResp>(std::bind(&WithStreamedUnaryMethod_SetCfgVirtPO<BaseClass>::StreamedSetCfgVirtPO, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetCfgVirtPO() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetCfgVirtPO(::grpc::ServerContext* context, const ::fsm::VirtP0* request, ::fsm::SetDeviceResp* response) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetCfgVirtPO(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::fsm::VirtP0,::fsm::SetDeviceResp>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetCfgMN401<WithStreamedUnaryMethod_GetCfgMN<WithStreamedUnaryMethod_GetCfgPO<WithStreamedUnaryMethod_GetCfgVirtPO<WithStreamedUnaryMethod_SetCfgMN401<WithStreamedUnaryMethod_SetCfgMN<WithStreamedUnaryMethod_SetCfgPO<WithStreamedUnaryMethod_SetCfgVirtPO<Service > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetCfgMN401<WithStreamedUnaryMethod_GetCfgMN<WithStreamedUnaryMethod_GetCfgPO<WithStreamedUnaryMethod_GetCfgVirtPO<WithStreamedUnaryMethod_SetCfgMN401<WithStreamedUnaryMethod_SetCfgMN<WithStreamedUnaryMethod_SetCfgPO<WithStreamedUnaryMethod_SetCfgVirtPO<Service > > > > > > > > StreamedService;
};

}  // namespace fsm


#endif  // GRPC_fsm_5fcckconfig_5fservice_2eproto__INCLUDED
