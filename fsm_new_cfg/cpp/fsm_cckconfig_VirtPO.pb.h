// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fsm_cckconfig_VirtPO.proto

#ifndef PROTOBUF_INCLUDED_fsm_5fcckconfig_5fVirtPO_2eproto
#define PROTOBUF_INCLUDED_fsm_5fcckconfig_5fVirtPO_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "fsm_cckconfig_clientinfo.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto 

namespace protobuf_fsm_5fcckconfig_5fVirtPO_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[9];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_fsm_5fcckconfig_5fVirtPO_2eproto
namespace fsm {
class Ctrlkey;
class CtrlkeyDefaultTypeInternal;
extern CtrlkeyDefaultTypeInternal _Ctrlkey_default_instance_;
class R168Cfg;
class R168CfgDefaultTypeInternal;
extern R168CfgDefaultTypeInternal _R168Cfg_default_instance_;
class R168Cfgel;
class R168CfgelDefaultTypeInternal;
extern R168CfgelDefaultTypeInternal _R168Cfgel_default_instance_;
class VirtP0;
class VirtP0DefaultTypeInternal;
extern VirtP0DefaultTypeInternal _VirtP0_default_instance_;
class VirtP0_Group;
class VirtP0_GroupDefaultTypeInternal;
extern VirtP0_GroupDefaultTypeInternal _VirtP0_Group_default_instance_;
class VirtP0_Group_el;
class VirtP0_Group_elDefaultTypeInternal;
extern VirtP0_Group_elDefaultTypeInternal _VirtP0_Group_el_default_instance_;
class VirtP0_Group_subel;
class VirtP0_Group_subelDefaultTypeInternal;
extern VirtP0_Group_subelDefaultTypeInternal _VirtP0_Group_subel_default_instance_;
class VirtPO_Channel;
class VirtPO_ChannelDefaultTypeInternal;
extern VirtPO_ChannelDefaultTypeInternal _VirtPO_Channel_default_instance_;
class VirtPO_Subscriber;
class VirtPO_SubscriberDefaultTypeInternal;
extern VirtPO_SubscriberDefaultTypeInternal _VirtPO_Subscriber_default_instance_;
}  // namespace fsm
namespace google {
namespace protobuf {
template<> ::fsm::Ctrlkey* Arena::CreateMaybeMessage<::fsm::Ctrlkey>(Arena*);
template<> ::fsm::R168Cfg* Arena::CreateMaybeMessage<::fsm::R168Cfg>(Arena*);
template<> ::fsm::R168Cfgel* Arena::CreateMaybeMessage<::fsm::R168Cfgel>(Arena*);
template<> ::fsm::VirtP0* Arena::CreateMaybeMessage<::fsm::VirtP0>(Arena*);
template<> ::fsm::VirtP0_Group* Arena::CreateMaybeMessage<::fsm::VirtP0_Group>(Arena*);
template<> ::fsm::VirtP0_Group_el* Arena::CreateMaybeMessage<::fsm::VirtP0_Group_el>(Arena*);
template<> ::fsm::VirtP0_Group_subel* Arena::CreateMaybeMessage<::fsm::VirtP0_Group_subel>(Arena*);
template<> ::fsm::VirtPO_Channel* Arena::CreateMaybeMessage<::fsm::VirtPO_Channel>(Arena*);
template<> ::fsm::VirtPO_Subscriber* Arena::CreateMaybeMessage<::fsm::VirtPO_Subscriber>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace fsm {

// ===================================================================

class VirtP0_Group_subel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.VirtP0_Group_subel) */ {
 public:
  VirtP0_Group_subel();
  virtual ~VirtP0_Group_subel();

  VirtP0_Group_subel(const VirtP0_Group_subel& from);

  inline VirtP0_Group_subel& operator=(const VirtP0_Group_subel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VirtP0_Group_subel(VirtP0_Group_subel&& from) noexcept
    : VirtP0_Group_subel() {
    *this = ::std::move(from);
  }

  inline VirtP0_Group_subel& operator=(VirtP0_Group_subel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VirtP0_Group_subel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VirtP0_Group_subel* internal_default_instance() {
    return reinterpret_cast<const VirtP0_Group_subel*>(
               &_VirtP0_Group_subel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(VirtP0_Group_subel* other);
  friend void swap(VirtP0_Group_subel& a, VirtP0_Group_subel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VirtP0_Group_subel* New() const final {
    return CreateMaybeMessage<VirtP0_Group_subel>(NULL);
  }

  VirtP0_Group_subel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VirtP0_Group_subel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VirtP0_Group_subel& from);
  void MergeFrom(const VirtP0_Group_subel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VirtP0_Group_subel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 abonent = 1;
  int abonent_size() const;
  void clear_abonent();
  static const int kAbonentFieldNumber = 1;
  ::google::protobuf::uint32 abonent(int index) const;
  void set_abonent(int index, ::google::protobuf::uint32 value);
  void add_abonent(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      abonent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_abonent();

  // @@protoc_insertion_point(class_scope:fsm.VirtP0_Group_subel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > abonent_;
  mutable int _abonent_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VirtP0_Group_el : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.VirtP0_Group_el) */ {
 public:
  VirtP0_Group_el();
  virtual ~VirtP0_Group_el();

  VirtP0_Group_el(const VirtP0_Group_el& from);

  inline VirtP0_Group_el& operator=(const VirtP0_Group_el& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VirtP0_Group_el(VirtP0_Group_el&& from) noexcept
    : VirtP0_Group_el() {
    *this = ::std::move(from);
  }

  inline VirtP0_Group_el& operator=(VirtP0_Group_el&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VirtP0_Group_el& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VirtP0_Group_el* internal_default_instance() {
    return reinterpret_cast<const VirtP0_Group_el*>(
               &_VirtP0_Group_el_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(VirtP0_Group_el* other);
  friend void swap(VirtP0_Group_el& a, VirtP0_Group_el& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VirtP0_Group_el* New() const final {
    return CreateMaybeMessage<VirtP0_Group_el>(NULL);
  }

  VirtP0_Group_el* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VirtP0_Group_el>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VirtP0_Group_el& from);
  void MergeFrom(const VirtP0_Group_el& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VirtP0_Group_el* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fsm.VirtP0_Group_subel grp = 1;
  int grp_size() const;
  void clear_grp();
  static const int kGrpFieldNumber = 1;
  ::fsm::VirtP0_Group_subel* mutable_grp(int index);
  ::google::protobuf::RepeatedPtrField< ::fsm::VirtP0_Group_subel >*
      mutable_grp();
  const ::fsm::VirtP0_Group_subel& grp(int index) const;
  ::fsm::VirtP0_Group_subel* add_grp();
  const ::google::protobuf::RepeatedPtrField< ::fsm::VirtP0_Group_subel >&
      grp() const;

  // @@protoc_insertion_point(class_scope:fsm.VirtP0_Group_el)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fsm::VirtP0_Group_subel > grp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VirtP0_Group : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.VirtP0_Group) */ {
 public:
  VirtP0_Group();
  virtual ~VirtP0_Group();

  VirtP0_Group(const VirtP0_Group& from);

  inline VirtP0_Group& operator=(const VirtP0_Group& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VirtP0_Group(VirtP0_Group&& from) noexcept
    : VirtP0_Group() {
    *this = ::std::move(from);
  }

  inline VirtP0_Group& operator=(VirtP0_Group&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VirtP0_Group& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VirtP0_Group* internal_default_instance() {
    return reinterpret_cast<const VirtP0_Group*>(
               &_VirtP0_Group_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(VirtP0_Group* other);
  friend void swap(VirtP0_Group& a, VirtP0_Group& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VirtP0_Group* New() const final {
    return CreateMaybeMessage<VirtP0_Group>(NULL);
  }

  VirtP0_Group* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VirtP0_Group>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VirtP0_Group& from);
  void MergeFrom(const VirtP0_Group& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VirtP0_Group* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .fsm.VirtP0_Group_el cnfg = 1;
  bool has_cnfg() const;
  void clear_cnfg();
  static const int kCnfgFieldNumber = 1;
  private:
  const ::fsm::VirtP0_Group_el& _internal_cnfg() const;
  public:
  const ::fsm::VirtP0_Group_el& cnfg() const;
  ::fsm::VirtP0_Group_el* release_cnfg();
  ::fsm::VirtP0_Group_el* mutable_cnfg();
  void set_allocated_cnfg(::fsm::VirtP0_Group_el* cnfg);

  // .fsm.VirtP0_Group_el csvg = 2;
  bool has_csvg() const;
  void clear_csvg();
  static const int kCsvgFieldNumber = 2;
  private:
  const ::fsm::VirtP0_Group_el& _internal_csvg() const;
  public:
  const ::fsm::VirtP0_Group_el& csvg() const;
  ::fsm::VirtP0_Group_el* release_csvg();
  ::fsm::VirtP0_Group_el* mutable_csvg();
  void set_allocated_csvg(::fsm::VirtP0_Group_el* csvg);

  // @@protoc_insertion_point(class_scope:fsm.VirtP0_Group)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::fsm::VirtP0_Group_el* cnfg_;
  ::fsm::VirtP0_Group_el* csvg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VirtPO_Subscriber : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.VirtPO_Subscriber) */ {
 public:
  VirtPO_Subscriber();
  virtual ~VirtPO_Subscriber();

  VirtPO_Subscriber(const VirtPO_Subscriber& from);

  inline VirtPO_Subscriber& operator=(const VirtPO_Subscriber& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VirtPO_Subscriber(VirtPO_Subscriber&& from) noexcept
    : VirtPO_Subscriber() {
    *this = ::std::move(from);
  }

  inline VirtPO_Subscriber& operator=(VirtPO_Subscriber&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VirtPO_Subscriber& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VirtPO_Subscriber* internal_default_instance() {
    return reinterpret_cast<const VirtPO_Subscriber*>(
               &_VirtPO_Subscriber_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(VirtPO_Subscriber* other);
  friend void swap(VirtPO_Subscriber& a, VirtPO_Subscriber& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VirtPO_Subscriber* New() const final {
    return CreateMaybeMessage<VirtPO_Subscriber>(NULL);
  }

  VirtPO_Subscriber* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VirtPO_Subscriber>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VirtPO_Subscriber& from);
  void MergeFrom(const VirtPO_Subscriber& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VirtPO_Subscriber* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sipname = 1;
  void clear_sipname();
  static const int kSipnameFieldNumber = 1;
  const ::std::string& sipname() const;
  void set_sipname(const ::std::string& value);
  #if LANG_CXX11
  void set_sipname(::std::string&& value);
  #endif
  void set_sipname(const char* value);
  void set_sipname(const char* value, size_t size);
  ::std::string* mutable_sipname();
  ::std::string* release_sipname();
  void set_allocated_sipname(::std::string* sipname);

  // uint32 sipnumber = 2;
  void clear_sipnumber();
  static const int kSipnumberFieldNumber = 2;
  ::google::protobuf::uint32 sipnumber() const;
  void set_sipnumber(::google::protobuf::uint32 value);

  // uint32 flags = 3;
  void clear_flags();
  static const int kFlagsFieldNumber = 3;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fsm.VirtPO_Subscriber)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sipname_;
  ::google::protobuf::uint32 sipnumber_;
  ::google::protobuf::uint32 flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VirtPO_Channel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.VirtPO_Channel) */ {
 public:
  VirtPO_Channel();
  virtual ~VirtPO_Channel();

  VirtPO_Channel(const VirtPO_Channel& from);

  inline VirtPO_Channel& operator=(const VirtPO_Channel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VirtPO_Channel(VirtPO_Channel&& from) noexcept
    : VirtPO_Channel() {
    *this = ::std::move(from);
  }

  inline VirtPO_Channel& operator=(VirtPO_Channel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VirtPO_Channel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VirtPO_Channel* internal_default_instance() {
    return reinterpret_cast<const VirtPO_Channel*>(
               &_VirtPO_Channel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(VirtPO_Channel* other);
  friend void swap(VirtPO_Channel& a, VirtPO_Channel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VirtPO_Channel* New() const final {
    return CreateMaybeMessage<VirtPO_Channel>(NULL);
  }

  VirtPO_Channel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VirtPO_Channel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VirtPO_Channel& from);
  void MergeFrom(const VirtPO_Channel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VirtPO_Channel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fsm.VirtPO_Subscriber SubscriberForCall = 7;
  int subscriberforcall_size() const;
  void clear_subscriberforcall();
  static const int kSubscriberForCallFieldNumber = 7;
  ::fsm::VirtPO_Subscriber* mutable_subscriberforcall(int index);
  ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Subscriber >*
      mutable_subscriberforcall();
  const ::fsm::VirtPO_Subscriber& subscriberforcall(int index) const;
  ::fsm::VirtPO_Subscriber* add_subscriberforcall();
  const ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Subscriber >&
      subscriberforcall() const;

  // string self_sip_name = 3;
  void clear_self_sip_name();
  static const int kSelfSipNameFieldNumber = 3;
  const ::std::string& self_sip_name() const;
  void set_self_sip_name(const ::std::string& value);
  #if LANG_CXX11
  void set_self_sip_name(::std::string&& value);
  #endif
  void set_self_sip_name(const char* value);
  void set_self_sip_name(const char* value, size_t size);
  ::std::string* mutable_self_sip_name();
  ::std::string* release_self_sip_name();
  void set_allocated_self_sip_name(::std::string* self_sip_name);

  // string audio_device = 6;
  void clear_audio_device();
  static const int kAudioDeviceFieldNumber = 6;
  const ::std::string& audio_device() const;
  void set_audio_device(const ::std::string& value);
  #if LANG_CXX11
  void set_audio_device(::std::string&& value);
  #endif
  void set_audio_device(const char* value);
  void set_audio_device(const char* value, size_t size);
  ::std::string* mutable_audio_device();
  ::std::string* release_audio_device();
  void set_allocated_audio_device(::std::string* audio_device);

  // uint32 self_sip_port = 1;
  void clear_self_sip_port();
  static const int kSelfSipPortFieldNumber = 1;
  ::google::protobuf::uint32 self_sip_port() const;
  void set_self_sip_port(::google::protobuf::uint32 value);

  // uint32 self_sip_number = 2;
  void clear_self_sip_number();
  static const int kSelfSipNumberFieldNumber = 2;
  ::google::protobuf::uint32 self_sip_number() const;
  void set_self_sip_number(::google::protobuf::uint32 value);

  // uint32 min_self_rtp_port = 4;
  void clear_min_self_rtp_port();
  static const int kMinSelfRtpPortFieldNumber = 4;
  ::google::protobuf::uint32 min_self_rtp_port() const;
  void set_min_self_rtp_port(::google::protobuf::uint32 value);

  // uint32 max_self_rtp_port = 5;
  void clear_max_self_rtp_port();
  static const int kMaxSelfRtpPortFieldNumber = 5;
  ::google::protobuf::uint32 max_self_rtp_port() const;
  void set_max_self_rtp_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fsm.VirtPO_Channel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Subscriber > subscriberforcall_;
  ::google::protobuf::internal::ArenaStringPtr self_sip_name_;
  ::google::protobuf::internal::ArenaStringPtr audio_device_;
  ::google::protobuf::uint32 self_sip_port_;
  ::google::protobuf::uint32 self_sip_number_;
  ::google::protobuf::uint32 min_self_rtp_port_;
  ::google::protobuf::uint32 max_self_rtp_port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class R168Cfgel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.R168Cfgel) */ {
 public:
  R168Cfgel();
  virtual ~R168Cfgel();

  R168Cfgel(const R168Cfgel& from);

  inline R168Cfgel& operator=(const R168Cfgel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  R168Cfgel(R168Cfgel&& from) noexcept
    : R168Cfgel() {
    *this = ::std::move(from);
  }

  inline R168Cfgel& operator=(R168Cfgel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const R168Cfgel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const R168Cfgel* internal_default_instance() {
    return reinterpret_cast<const R168Cfgel*>(
               &_R168Cfgel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(R168Cfgel* other);
  friend void swap(R168Cfgel& a, R168Cfgel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline R168Cfgel* New() const final {
    return CreateMaybeMessage<R168Cfgel>(NULL);
  }

  R168Cfgel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<R168Cfgel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const R168Cfgel& from);
  void MergeFrom(const R168Cfgel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(R168Cfgel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // uint32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fsm.R168Cfgel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Ctrlkey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.Ctrlkey) */ {
 public:
  Ctrlkey();
  virtual ~Ctrlkey();

  Ctrlkey(const Ctrlkey& from);

  inline Ctrlkey& operator=(const Ctrlkey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Ctrlkey(Ctrlkey&& from) noexcept
    : Ctrlkey() {
    *this = ::std::move(from);
  }

  inline Ctrlkey& operator=(Ctrlkey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ctrlkey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ctrlkey* internal_default_instance() {
    return reinterpret_cast<const Ctrlkey*>(
               &_Ctrlkey_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(Ctrlkey* other);
  friend void swap(Ctrlkey& a, Ctrlkey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ctrlkey* New() const final {
    return CreateMaybeMessage<Ctrlkey>(NULL);
  }

  Ctrlkey* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Ctrlkey>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Ctrlkey& from);
  void MergeFrom(const Ctrlkey& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ctrlkey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // uint32 flags = 2;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fsm.Ctrlkey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::uint32 flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class R168Cfg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.R168Cfg) */ {
 public:
  R168Cfg();
  virtual ~R168Cfg();

  R168Cfg(const R168Cfg& from);

  inline R168Cfg& operator=(const R168Cfg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  R168Cfg(R168Cfg&& from) noexcept
    : R168Cfg() {
    *this = ::std::move(from);
  }

  inline R168Cfg& operator=(R168Cfg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const R168Cfg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const R168Cfg* internal_default_instance() {
    return reinterpret_cast<const R168Cfg*>(
               &_R168Cfg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(R168Cfg* other);
  friend void swap(R168Cfg& a, R168Cfg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline R168Cfg* New() const final {
    return CreateMaybeMessage<R168Cfg>(NULL);
  }

  R168Cfg* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<R168Cfg>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const R168Cfg& from);
  void MergeFrom(const R168Cfg& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(R168Cfg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fsm.R168Cfgel channel = 1;
  int channel_size() const;
  void clear_channel();
  static const int kChannelFieldNumber = 1;
  ::fsm::R168Cfgel* mutable_channel(int index);
  ::google::protobuf::RepeatedPtrField< ::fsm::R168Cfgel >*
      mutable_channel();
  const ::fsm::R168Cfgel& channel(int index) const;
  ::fsm::R168Cfgel* add_channel();
  const ::google::protobuf::RepeatedPtrField< ::fsm::R168Cfgel >&
      channel() const;

  // @@protoc_insertion_point(class_scope:fsm.R168Cfg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fsm::R168Cfgel > channel_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VirtP0 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.VirtP0) */ {
 public:
  VirtP0();
  virtual ~VirtP0();

  VirtP0(const VirtP0& from);

  inline VirtP0& operator=(const VirtP0& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VirtP0(VirtP0&& from) noexcept
    : VirtP0() {
    *this = ::std::move(from);
  }

  inline VirtP0& operator=(VirtP0&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VirtP0& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VirtP0* internal_default_instance() {
    return reinterpret_cast<const VirtP0*>(
               &_VirtP0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(VirtP0* other);
  friend void swap(VirtP0& a, VirtP0& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VirtP0* New() const final {
    return CreateMaybeMessage<VirtP0>(NULL);
  }

  VirtP0* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<VirtP0>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const VirtP0& from);
  void MergeFrom(const VirtP0& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VirtP0* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fsm.VirtPO_Channel channel = 6;
  int channel_size() const;
  void clear_channel();
  static const int kChannelFieldNumber = 6;
  ::fsm::VirtPO_Channel* mutable_channel(int index);
  ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Channel >*
      mutable_channel();
  const ::fsm::VirtPO_Channel& channel(int index) const;
  ::fsm::VirtPO_Channel* add_channel();
  const ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Channel >&
      channel() const;

  // .fsm.ClientInfo client = 1;
  bool has_client() const;
  void clear_client();
  static const int kClientFieldNumber = 1;
  private:
  const ::fsm::ClientInfo& _internal_client() const;
  public:
  const ::fsm::ClientInfo& client() const;
  ::fsm::ClientInfo* release_client();
  ::fsm::ClientInfo* mutable_client();
  void set_allocated_client(::fsm::ClientInfo* client);

  // .fsm.R168Cfg r168 = 2;
  bool has_r168() const;
  void clear_r168();
  static const int kR168FieldNumber = 2;
  private:
  const ::fsm::R168Cfg& _internal_r168() const;
  public:
  const ::fsm::R168Cfg& r168() const;
  ::fsm::R168Cfg* release_r168();
  ::fsm::R168Cfg* mutable_r168();
  void set_allocated_r168(::fsm::R168Cfg* r168);

  // .fsm.VirtP0_Group grp = 3;
  bool has_grp() const;
  void clear_grp();
  static const int kGrpFieldNumber = 3;
  private:
  const ::fsm::VirtP0_Group& _internal_grp() const;
  public:
  const ::fsm::VirtP0_Group& grp() const;
  ::fsm::VirtP0_Group* release_grp();
  ::fsm::VirtP0_Group* mutable_grp();
  void set_allocated_grp(::fsm::VirtP0_Group* grp);

  // .fsm.Ctrlkey key = 5;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 5;
  private:
  const ::fsm::Ctrlkey& _internal_key() const;
  public:
  const ::fsm::Ctrlkey& key() const;
  ::fsm::Ctrlkey* release_key();
  ::fsm::Ctrlkey* mutable_key();
  void set_allocated_key(::fsm::Ctrlkey* key);

  // int32 rlk_port = 4;
  void clear_rlk_port();
  static const int kRlkPortFieldNumber = 4;
  ::google::protobuf::int32 rlk_port() const;
  void set_rlk_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fsm.VirtP0)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Channel > channel_;
  ::fsm::ClientInfo* client_;
  ::fsm::R168Cfg* r168_;
  ::fsm::VirtP0_Group* grp_;
  ::fsm::Ctrlkey* key_;
  ::google::protobuf::int32 rlk_port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VirtP0_Group_subel

// repeated uint32 abonent = 1;
inline int VirtP0_Group_subel::abonent_size() const {
  return abonent_.size();
}
inline void VirtP0_Group_subel::clear_abonent() {
  abonent_.Clear();
}
inline ::google::protobuf::uint32 VirtP0_Group_subel::abonent(int index) const {
  // @@protoc_insertion_point(field_get:fsm.VirtP0_Group_subel.abonent)
  return abonent_.Get(index);
}
inline void VirtP0_Group_subel::set_abonent(int index, ::google::protobuf::uint32 value) {
  abonent_.Set(index, value);
  // @@protoc_insertion_point(field_set:fsm.VirtP0_Group_subel.abonent)
}
inline void VirtP0_Group_subel::add_abonent(::google::protobuf::uint32 value) {
  abonent_.Add(value);
  // @@protoc_insertion_point(field_add:fsm.VirtP0_Group_subel.abonent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
VirtP0_Group_subel::abonent() const {
  // @@protoc_insertion_point(field_list:fsm.VirtP0_Group_subel.abonent)
  return abonent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
VirtP0_Group_subel::mutable_abonent() {
  // @@protoc_insertion_point(field_mutable_list:fsm.VirtP0_Group_subel.abonent)
  return &abonent_;
}

// -------------------------------------------------------------------

// VirtP0_Group_el

// repeated .fsm.VirtP0_Group_subel grp = 1;
inline int VirtP0_Group_el::grp_size() const {
  return grp_.size();
}
inline void VirtP0_Group_el::clear_grp() {
  grp_.Clear();
}
inline ::fsm::VirtP0_Group_subel* VirtP0_Group_el::mutable_grp(int index) {
  // @@protoc_insertion_point(field_mutable:fsm.VirtP0_Group_el.grp)
  return grp_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fsm::VirtP0_Group_subel >*
VirtP0_Group_el::mutable_grp() {
  // @@protoc_insertion_point(field_mutable_list:fsm.VirtP0_Group_el.grp)
  return &grp_;
}
inline const ::fsm::VirtP0_Group_subel& VirtP0_Group_el::grp(int index) const {
  // @@protoc_insertion_point(field_get:fsm.VirtP0_Group_el.grp)
  return grp_.Get(index);
}
inline ::fsm::VirtP0_Group_subel* VirtP0_Group_el::add_grp() {
  // @@protoc_insertion_point(field_add:fsm.VirtP0_Group_el.grp)
  return grp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fsm::VirtP0_Group_subel >&
VirtP0_Group_el::grp() const {
  // @@protoc_insertion_point(field_list:fsm.VirtP0_Group_el.grp)
  return grp_;
}

// -------------------------------------------------------------------

// VirtP0_Group

// .fsm.VirtP0_Group_el cnfg = 1;
inline bool VirtP0_Group::has_cnfg() const {
  return this != internal_default_instance() && cnfg_ != NULL;
}
inline void VirtP0_Group::clear_cnfg() {
  if (GetArenaNoVirtual() == NULL && cnfg_ != NULL) {
    delete cnfg_;
  }
  cnfg_ = NULL;
}
inline const ::fsm::VirtP0_Group_el& VirtP0_Group::_internal_cnfg() const {
  return *cnfg_;
}
inline const ::fsm::VirtP0_Group_el& VirtP0_Group::cnfg() const {
  const ::fsm::VirtP0_Group_el* p = cnfg_;
  // @@protoc_insertion_point(field_get:fsm.VirtP0_Group.cnfg)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::VirtP0_Group_el*>(
      &::fsm::_VirtP0_Group_el_default_instance_);
}
inline ::fsm::VirtP0_Group_el* VirtP0_Group::release_cnfg() {
  // @@protoc_insertion_point(field_release:fsm.VirtP0_Group.cnfg)
  
  ::fsm::VirtP0_Group_el* temp = cnfg_;
  cnfg_ = NULL;
  return temp;
}
inline ::fsm::VirtP0_Group_el* VirtP0_Group::mutable_cnfg() {
  
  if (cnfg_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::VirtP0_Group_el>(GetArenaNoVirtual());
    cnfg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.VirtP0_Group.cnfg)
  return cnfg_;
}
inline void VirtP0_Group::set_allocated_cnfg(::fsm::VirtP0_Group_el* cnfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cnfg_;
  }
  if (cnfg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cnfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cnfg, submessage_arena);
    }
    
  } else {
    
  }
  cnfg_ = cnfg;
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtP0_Group.cnfg)
}

// .fsm.VirtP0_Group_el csvg = 2;
inline bool VirtP0_Group::has_csvg() const {
  return this != internal_default_instance() && csvg_ != NULL;
}
inline void VirtP0_Group::clear_csvg() {
  if (GetArenaNoVirtual() == NULL && csvg_ != NULL) {
    delete csvg_;
  }
  csvg_ = NULL;
}
inline const ::fsm::VirtP0_Group_el& VirtP0_Group::_internal_csvg() const {
  return *csvg_;
}
inline const ::fsm::VirtP0_Group_el& VirtP0_Group::csvg() const {
  const ::fsm::VirtP0_Group_el* p = csvg_;
  // @@protoc_insertion_point(field_get:fsm.VirtP0_Group.csvg)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::VirtP0_Group_el*>(
      &::fsm::_VirtP0_Group_el_default_instance_);
}
inline ::fsm::VirtP0_Group_el* VirtP0_Group::release_csvg() {
  // @@protoc_insertion_point(field_release:fsm.VirtP0_Group.csvg)
  
  ::fsm::VirtP0_Group_el* temp = csvg_;
  csvg_ = NULL;
  return temp;
}
inline ::fsm::VirtP0_Group_el* VirtP0_Group::mutable_csvg() {
  
  if (csvg_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::VirtP0_Group_el>(GetArenaNoVirtual());
    csvg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.VirtP0_Group.csvg)
  return csvg_;
}
inline void VirtP0_Group::set_allocated_csvg(::fsm::VirtP0_Group_el* csvg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete csvg_;
  }
  if (csvg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      csvg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, csvg, submessage_arena);
    }
    
  } else {
    
  }
  csvg_ = csvg;
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtP0_Group.csvg)
}

// -------------------------------------------------------------------

// VirtPO_Subscriber

// string sipname = 1;
inline void VirtPO_Subscriber::clear_sipname() {
  sipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VirtPO_Subscriber::sipname() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Subscriber.sipname)
  return sipname_.GetNoArena();
}
inline void VirtPO_Subscriber::set_sipname(const ::std::string& value) {
  
  sipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Subscriber.sipname)
}
#if LANG_CXX11
inline void VirtPO_Subscriber::set_sipname(::std::string&& value) {
  
  sipname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fsm.VirtPO_Subscriber.sipname)
}
#endif
inline void VirtPO_Subscriber::set_sipname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fsm.VirtPO_Subscriber.sipname)
}
inline void VirtPO_Subscriber::set_sipname(const char* value, size_t size) {
  
  sipname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fsm.VirtPO_Subscriber.sipname)
}
inline ::std::string* VirtPO_Subscriber::mutable_sipname() {
  
  // @@protoc_insertion_point(field_mutable:fsm.VirtPO_Subscriber.sipname)
  return sipname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VirtPO_Subscriber::release_sipname() {
  // @@protoc_insertion_point(field_release:fsm.VirtPO_Subscriber.sipname)
  
  return sipname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VirtPO_Subscriber::set_allocated_sipname(::std::string* sipname) {
  if (sipname != NULL) {
    
  } else {
    
  }
  sipname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sipname);
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtPO_Subscriber.sipname)
}

// uint32 sipnumber = 2;
inline void VirtPO_Subscriber::clear_sipnumber() {
  sipnumber_ = 0u;
}
inline ::google::protobuf::uint32 VirtPO_Subscriber::sipnumber() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Subscriber.sipnumber)
  return sipnumber_;
}
inline void VirtPO_Subscriber::set_sipnumber(::google::protobuf::uint32 value) {
  
  sipnumber_ = value;
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Subscriber.sipnumber)
}

// uint32 flags = 3;
inline void VirtPO_Subscriber::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 VirtPO_Subscriber::flags() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Subscriber.flags)
  return flags_;
}
inline void VirtPO_Subscriber::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Subscriber.flags)
}

// -------------------------------------------------------------------

// VirtPO_Channel

// uint32 self_sip_port = 1;
inline void VirtPO_Channel::clear_self_sip_port() {
  self_sip_port_ = 0u;
}
inline ::google::protobuf::uint32 VirtPO_Channel::self_sip_port() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Channel.self_sip_port)
  return self_sip_port_;
}
inline void VirtPO_Channel::set_self_sip_port(::google::protobuf::uint32 value) {
  
  self_sip_port_ = value;
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Channel.self_sip_port)
}

// uint32 self_sip_number = 2;
inline void VirtPO_Channel::clear_self_sip_number() {
  self_sip_number_ = 0u;
}
inline ::google::protobuf::uint32 VirtPO_Channel::self_sip_number() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Channel.self_sip_number)
  return self_sip_number_;
}
inline void VirtPO_Channel::set_self_sip_number(::google::protobuf::uint32 value) {
  
  self_sip_number_ = value;
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Channel.self_sip_number)
}

// string self_sip_name = 3;
inline void VirtPO_Channel::clear_self_sip_name() {
  self_sip_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VirtPO_Channel::self_sip_name() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Channel.self_sip_name)
  return self_sip_name_.GetNoArena();
}
inline void VirtPO_Channel::set_self_sip_name(const ::std::string& value) {
  
  self_sip_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Channel.self_sip_name)
}
#if LANG_CXX11
inline void VirtPO_Channel::set_self_sip_name(::std::string&& value) {
  
  self_sip_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fsm.VirtPO_Channel.self_sip_name)
}
#endif
inline void VirtPO_Channel::set_self_sip_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  self_sip_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fsm.VirtPO_Channel.self_sip_name)
}
inline void VirtPO_Channel::set_self_sip_name(const char* value, size_t size) {
  
  self_sip_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fsm.VirtPO_Channel.self_sip_name)
}
inline ::std::string* VirtPO_Channel::mutable_self_sip_name() {
  
  // @@protoc_insertion_point(field_mutable:fsm.VirtPO_Channel.self_sip_name)
  return self_sip_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VirtPO_Channel::release_self_sip_name() {
  // @@protoc_insertion_point(field_release:fsm.VirtPO_Channel.self_sip_name)
  
  return self_sip_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VirtPO_Channel::set_allocated_self_sip_name(::std::string* self_sip_name) {
  if (self_sip_name != NULL) {
    
  } else {
    
  }
  self_sip_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), self_sip_name);
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtPO_Channel.self_sip_name)
}

// uint32 min_self_rtp_port = 4;
inline void VirtPO_Channel::clear_min_self_rtp_port() {
  min_self_rtp_port_ = 0u;
}
inline ::google::protobuf::uint32 VirtPO_Channel::min_self_rtp_port() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Channel.min_self_rtp_port)
  return min_self_rtp_port_;
}
inline void VirtPO_Channel::set_min_self_rtp_port(::google::protobuf::uint32 value) {
  
  min_self_rtp_port_ = value;
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Channel.min_self_rtp_port)
}

// uint32 max_self_rtp_port = 5;
inline void VirtPO_Channel::clear_max_self_rtp_port() {
  max_self_rtp_port_ = 0u;
}
inline ::google::protobuf::uint32 VirtPO_Channel::max_self_rtp_port() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Channel.max_self_rtp_port)
  return max_self_rtp_port_;
}
inline void VirtPO_Channel::set_max_self_rtp_port(::google::protobuf::uint32 value) {
  
  max_self_rtp_port_ = value;
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Channel.max_self_rtp_port)
}

// string audio_device = 6;
inline void VirtPO_Channel::clear_audio_device() {
  audio_device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VirtPO_Channel::audio_device() const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Channel.audio_device)
  return audio_device_.GetNoArena();
}
inline void VirtPO_Channel::set_audio_device(const ::std::string& value) {
  
  audio_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fsm.VirtPO_Channel.audio_device)
}
#if LANG_CXX11
inline void VirtPO_Channel::set_audio_device(::std::string&& value) {
  
  audio_device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fsm.VirtPO_Channel.audio_device)
}
#endif
inline void VirtPO_Channel::set_audio_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  audio_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fsm.VirtPO_Channel.audio_device)
}
inline void VirtPO_Channel::set_audio_device(const char* value, size_t size) {
  
  audio_device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fsm.VirtPO_Channel.audio_device)
}
inline ::std::string* VirtPO_Channel::mutable_audio_device() {
  
  // @@protoc_insertion_point(field_mutable:fsm.VirtPO_Channel.audio_device)
  return audio_device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VirtPO_Channel::release_audio_device() {
  // @@protoc_insertion_point(field_release:fsm.VirtPO_Channel.audio_device)
  
  return audio_device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VirtPO_Channel::set_allocated_audio_device(::std::string* audio_device) {
  if (audio_device != NULL) {
    
  } else {
    
  }
  audio_device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), audio_device);
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtPO_Channel.audio_device)
}

// repeated .fsm.VirtPO_Subscriber SubscriberForCall = 7;
inline int VirtPO_Channel::subscriberforcall_size() const {
  return subscriberforcall_.size();
}
inline void VirtPO_Channel::clear_subscriberforcall() {
  subscriberforcall_.Clear();
}
inline ::fsm::VirtPO_Subscriber* VirtPO_Channel::mutable_subscriberforcall(int index) {
  // @@protoc_insertion_point(field_mutable:fsm.VirtPO_Channel.SubscriberForCall)
  return subscriberforcall_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Subscriber >*
VirtPO_Channel::mutable_subscriberforcall() {
  // @@protoc_insertion_point(field_mutable_list:fsm.VirtPO_Channel.SubscriberForCall)
  return &subscriberforcall_;
}
inline const ::fsm::VirtPO_Subscriber& VirtPO_Channel::subscriberforcall(int index) const {
  // @@protoc_insertion_point(field_get:fsm.VirtPO_Channel.SubscriberForCall)
  return subscriberforcall_.Get(index);
}
inline ::fsm::VirtPO_Subscriber* VirtPO_Channel::add_subscriberforcall() {
  // @@protoc_insertion_point(field_add:fsm.VirtPO_Channel.SubscriberForCall)
  return subscriberforcall_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Subscriber >&
VirtPO_Channel::subscriberforcall() const {
  // @@protoc_insertion_point(field_list:fsm.VirtPO_Channel.SubscriberForCall)
  return subscriberforcall_;
}

// -------------------------------------------------------------------

// R168Cfgel

// uint32 ip = 1;
inline void R168Cfgel::clear_ip() {
  ip_ = 0u;
}
inline ::google::protobuf::uint32 R168Cfgel::ip() const {
  // @@protoc_insertion_point(field_get:fsm.R168Cfgel.ip)
  return ip_;
}
inline void R168Cfgel::set_ip(::google::protobuf::uint32 value) {
  
  ip_ = value;
  // @@protoc_insertion_point(field_set:fsm.R168Cfgel.ip)
}

// uint32 port = 2;
inline void R168Cfgel::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 R168Cfgel::port() const {
  // @@protoc_insertion_point(field_get:fsm.R168Cfgel.port)
  return port_;
}
inline void R168Cfgel::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:fsm.R168Cfgel.port)
}

// -------------------------------------------------------------------

// Ctrlkey

// string key = 1;
inline void Ctrlkey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Ctrlkey::key() const {
  // @@protoc_insertion_point(field_get:fsm.Ctrlkey.key)
  return key_.GetNoArena();
}
inline void Ctrlkey::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fsm.Ctrlkey.key)
}
#if LANG_CXX11
inline void Ctrlkey::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fsm.Ctrlkey.key)
}
#endif
inline void Ctrlkey::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fsm.Ctrlkey.key)
}
inline void Ctrlkey::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fsm.Ctrlkey.key)
}
inline ::std::string* Ctrlkey::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:fsm.Ctrlkey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Ctrlkey::release_key() {
  // @@protoc_insertion_point(field_release:fsm.Ctrlkey.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Ctrlkey::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:fsm.Ctrlkey.key)
}

// uint32 flags = 2;
inline void Ctrlkey::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 Ctrlkey::flags() const {
  // @@protoc_insertion_point(field_get:fsm.Ctrlkey.flags)
  return flags_;
}
inline void Ctrlkey::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:fsm.Ctrlkey.flags)
}

// -------------------------------------------------------------------

// R168Cfg

// repeated .fsm.R168Cfgel channel = 1;
inline int R168Cfg::channel_size() const {
  return channel_.size();
}
inline void R168Cfg::clear_channel() {
  channel_.Clear();
}
inline ::fsm::R168Cfgel* R168Cfg::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:fsm.R168Cfg.channel)
  return channel_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fsm::R168Cfgel >*
R168Cfg::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:fsm.R168Cfg.channel)
  return &channel_;
}
inline const ::fsm::R168Cfgel& R168Cfg::channel(int index) const {
  // @@protoc_insertion_point(field_get:fsm.R168Cfg.channel)
  return channel_.Get(index);
}
inline ::fsm::R168Cfgel* R168Cfg::add_channel() {
  // @@protoc_insertion_point(field_add:fsm.R168Cfg.channel)
  return channel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fsm::R168Cfgel >&
R168Cfg::channel() const {
  // @@protoc_insertion_point(field_list:fsm.R168Cfg.channel)
  return channel_;
}

// -------------------------------------------------------------------

// VirtP0

// .fsm.ClientInfo client = 1;
inline bool VirtP0::has_client() const {
  return this != internal_default_instance() && client_ != NULL;
}
inline const ::fsm::ClientInfo& VirtP0::_internal_client() const {
  return *client_;
}
inline const ::fsm::ClientInfo& VirtP0::client() const {
  const ::fsm::ClientInfo* p = client_;
  // @@protoc_insertion_point(field_get:fsm.VirtP0.client)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::ClientInfo*>(
      &::fsm::_ClientInfo_default_instance_);
}
inline ::fsm::ClientInfo* VirtP0::release_client() {
  // @@protoc_insertion_point(field_release:fsm.VirtP0.client)
  
  ::fsm::ClientInfo* temp = client_;
  client_ = NULL;
  return temp;
}
inline ::fsm::ClientInfo* VirtP0::mutable_client() {
  
  if (client_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::ClientInfo>(GetArenaNoVirtual());
    client_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.VirtP0.client)
  return client_;
}
inline void VirtP0::set_allocated_client(::fsm::ClientInfo* client) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(client_);
  }
  if (client) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      client = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, client, submessage_arena);
    }
    
  } else {
    
  }
  client_ = client;
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtP0.client)
}

// .fsm.R168Cfg r168 = 2;
inline bool VirtP0::has_r168() const {
  return this != internal_default_instance() && r168_ != NULL;
}
inline void VirtP0::clear_r168() {
  if (GetArenaNoVirtual() == NULL && r168_ != NULL) {
    delete r168_;
  }
  r168_ = NULL;
}
inline const ::fsm::R168Cfg& VirtP0::_internal_r168() const {
  return *r168_;
}
inline const ::fsm::R168Cfg& VirtP0::r168() const {
  const ::fsm::R168Cfg* p = r168_;
  // @@protoc_insertion_point(field_get:fsm.VirtP0.r168)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::R168Cfg*>(
      &::fsm::_R168Cfg_default_instance_);
}
inline ::fsm::R168Cfg* VirtP0::release_r168() {
  // @@protoc_insertion_point(field_release:fsm.VirtP0.r168)
  
  ::fsm::R168Cfg* temp = r168_;
  r168_ = NULL;
  return temp;
}
inline ::fsm::R168Cfg* VirtP0::mutable_r168() {
  
  if (r168_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::R168Cfg>(GetArenaNoVirtual());
    r168_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.VirtP0.r168)
  return r168_;
}
inline void VirtP0::set_allocated_r168(::fsm::R168Cfg* r168) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete r168_;
  }
  if (r168) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      r168 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, r168, submessage_arena);
    }
    
  } else {
    
  }
  r168_ = r168;
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtP0.r168)
}

// .fsm.VirtP0_Group grp = 3;
inline bool VirtP0::has_grp() const {
  return this != internal_default_instance() && grp_ != NULL;
}
inline void VirtP0::clear_grp() {
  if (GetArenaNoVirtual() == NULL && grp_ != NULL) {
    delete grp_;
  }
  grp_ = NULL;
}
inline const ::fsm::VirtP0_Group& VirtP0::_internal_grp() const {
  return *grp_;
}
inline const ::fsm::VirtP0_Group& VirtP0::grp() const {
  const ::fsm::VirtP0_Group* p = grp_;
  // @@protoc_insertion_point(field_get:fsm.VirtP0.grp)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::VirtP0_Group*>(
      &::fsm::_VirtP0_Group_default_instance_);
}
inline ::fsm::VirtP0_Group* VirtP0::release_grp() {
  // @@protoc_insertion_point(field_release:fsm.VirtP0.grp)
  
  ::fsm::VirtP0_Group* temp = grp_;
  grp_ = NULL;
  return temp;
}
inline ::fsm::VirtP0_Group* VirtP0::mutable_grp() {
  
  if (grp_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::VirtP0_Group>(GetArenaNoVirtual());
    grp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.VirtP0.grp)
  return grp_;
}
inline void VirtP0::set_allocated_grp(::fsm::VirtP0_Group* grp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete grp_;
  }
  if (grp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      grp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, grp, submessage_arena);
    }
    
  } else {
    
  }
  grp_ = grp;
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtP0.grp)
}

// int32 rlk_port = 4;
inline void VirtP0::clear_rlk_port() {
  rlk_port_ = 0;
}
inline ::google::protobuf::int32 VirtP0::rlk_port() const {
  // @@protoc_insertion_point(field_get:fsm.VirtP0.rlk_port)
  return rlk_port_;
}
inline void VirtP0::set_rlk_port(::google::protobuf::int32 value) {
  
  rlk_port_ = value;
  // @@protoc_insertion_point(field_set:fsm.VirtP0.rlk_port)
}

// .fsm.Ctrlkey key = 5;
inline bool VirtP0::has_key() const {
  return this != internal_default_instance() && key_ != NULL;
}
inline void VirtP0::clear_key() {
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
}
inline const ::fsm::Ctrlkey& VirtP0::_internal_key() const {
  return *key_;
}
inline const ::fsm::Ctrlkey& VirtP0::key() const {
  const ::fsm::Ctrlkey* p = key_;
  // @@protoc_insertion_point(field_get:fsm.VirtP0.key)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::Ctrlkey*>(
      &::fsm::_Ctrlkey_default_instance_);
}
inline ::fsm::Ctrlkey* VirtP0::release_key() {
  // @@protoc_insertion_point(field_release:fsm.VirtP0.key)
  
  ::fsm::Ctrlkey* temp = key_;
  key_ = NULL;
  return temp;
}
inline ::fsm::Ctrlkey* VirtP0::mutable_key() {
  
  if (key_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::Ctrlkey>(GetArenaNoVirtual());
    key_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.VirtP0.key)
  return key_;
}
inline void VirtP0::set_allocated_key(::fsm::Ctrlkey* key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete key_;
  }
  if (key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key, submessage_arena);
    }
    
  } else {
    
  }
  key_ = key;
  // @@protoc_insertion_point(field_set_allocated:fsm.VirtP0.key)
}

// repeated .fsm.VirtPO_Channel channel = 6;
inline int VirtP0::channel_size() const {
  return channel_.size();
}
inline void VirtP0::clear_channel() {
  channel_.Clear();
}
inline ::fsm::VirtPO_Channel* VirtP0::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:fsm.VirtP0.channel)
  return channel_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Channel >*
VirtP0::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:fsm.VirtP0.channel)
  return &channel_;
}
inline const ::fsm::VirtPO_Channel& VirtP0::channel(int index) const {
  // @@protoc_insertion_point(field_get:fsm.VirtP0.channel)
  return channel_.Get(index);
}
inline ::fsm::VirtPO_Channel* VirtP0::add_channel() {
  // @@protoc_insertion_point(field_add:fsm.VirtP0.channel)
  return channel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fsm::VirtPO_Channel >&
VirtP0::channel() const {
  // @@protoc_insertion_point(field_list:fsm.VirtP0.channel)
  return channel_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace fsm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_fsm_5fcckconfig_5fVirtPO_2eproto
