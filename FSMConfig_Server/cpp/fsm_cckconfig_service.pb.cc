// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fsm_cckconfig_service.proto

#include "fsm_cckconfig_service.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace fsm {
class GetDeviceRqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDeviceRq>
      _instance;
} _GetDeviceRq_default_instance_;
class SetDeviceRespDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SetDeviceResp>
      _instance;
} _SetDeviceResp_default_instance_;
}  // namespace fsm
namespace protobuf_fsm_5fcckconfig_5fservice_2eproto {
static void InitDefaultsGetDeviceRq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_GetDeviceRq_default_instance_;
    new (ptr) ::fsm::GetDeviceRq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::GetDeviceRq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetDeviceRq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetDeviceRq}, {}};

static void InitDefaultsSetDeviceResp() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_SetDeviceResp_default_instance_;
    new (ptr) ::fsm::SetDeviceResp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::SetDeviceResp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SetDeviceResp =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSetDeviceResp}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetDeviceRq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SetDeviceResp.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::GetDeviceRq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::GetDeviceRq, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::SetDeviceResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::SetDeviceResp, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fsm::GetDeviceRq)},
  { 6, -1, sizeof(::fsm::SetDeviceResp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_GetDeviceRq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_SetDeviceResp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "fsm_cckconfig_service.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033fsm_cckconfig_service.proto\022\003fsm\032\026fsm_"
      "cckconfig_MN.proto\032\031fsm_cckconfig_MN401."
      "proto\032\026fsm_cckconfig_PO.proto\032\032fsm_cckco"
      "nfig_VirtPO.proto\"\031\n\013GetDeviceRq\022\n\n\002id\030\001"
      " \001(\005\"\037\n\rSetDeviceResp\022\016\n\006status\030\001 \001(\0052\367\002"
      "\n\tCCKConfig\022-\n\013GetCfgMN401\022\020.fsm.GetDevi"
      "ceRq\032\n.fsm.MN401\"\000\022\'\n\010GetCfgMN\022\020.fsm.Get"
      "DeviceRq\032\007.fsm.MN\"\000\022\'\n\010GetCfgPO\022\020.fsm.Ge"
      "tDeviceRq\032\007.fsm.P0\"\000\022/\n\014GetCfgVirtPO\022\020.f"
      "sm.GetDeviceRq\032\013.fsm.VirtP0\"\000\022/\n\013SetCfgM"
      "N401\022\n.fsm.MN401\032\022.fsm.SetDeviceResp\"\000\022)"
      "\n\010SetCfgMN\022\007.fsm.MN\032\022.fsm.SetDeviceResp\""
      "\000\022)\n\010SetCfgPO\022\007.fsm.P0\032\022.fsm.SetDeviceRe"
      "sp\"\000\0221\n\014SetCfgVirtPO\022\013.fsm.VirtP0\032\022.fsm."
      "SetDeviceResp\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 583);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fsm_cckconfig_service.proto", &protobuf_RegisterTypes);
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::AddDescriptors();
  ::protobuf_fsm_5fcckconfig_5fMN401_2eproto::AddDescriptors();
  ::protobuf_fsm_5fcckconfig_5fPO_2eproto::AddDescriptors();
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_fsm_5fcckconfig_5fservice_2eproto
namespace fsm {

// ===================================================================

void GetDeviceRq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDeviceRq::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDeviceRq::GetDeviceRq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fservice_2eproto::scc_info_GetDeviceRq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.GetDeviceRq)
}
GetDeviceRq::GetDeviceRq(const GetDeviceRq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:fsm.GetDeviceRq)
}

void GetDeviceRq::SharedCtor() {
  id_ = 0;
}

GetDeviceRq::~GetDeviceRq() {
  // @@protoc_insertion_point(destructor:fsm.GetDeviceRq)
  SharedDtor();
}

void GetDeviceRq::SharedDtor() {
}

void GetDeviceRq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetDeviceRq::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDeviceRq& GetDeviceRq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fservice_2eproto::scc_info_GetDeviceRq.base);
  return *internal_default_instance();
}


void GetDeviceRq::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.GetDeviceRq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0;
  _internal_metadata_.Clear();
}

bool GetDeviceRq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.GetDeviceRq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.GetDeviceRq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.GetDeviceRq)
  return false;
#undef DO_
}

void GetDeviceRq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.GetDeviceRq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.GetDeviceRq)
}

::google::protobuf::uint8* GetDeviceRq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.GetDeviceRq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.GetDeviceRq)
  return target;
}

size_t GetDeviceRq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.GetDeviceRq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDeviceRq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.GetDeviceRq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDeviceRq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDeviceRq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.GetDeviceRq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.GetDeviceRq)
    MergeFrom(*source);
  }
}

void GetDeviceRq::MergeFrom(const GetDeviceRq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.GetDeviceRq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void GetDeviceRq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.GetDeviceRq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDeviceRq::CopyFrom(const GetDeviceRq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.GetDeviceRq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDeviceRq::IsInitialized() const {
  return true;
}

void GetDeviceRq::Swap(GetDeviceRq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDeviceRq::InternalSwap(GetDeviceRq* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetDeviceRq::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SetDeviceResp::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetDeviceResp::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetDeviceResp::SetDeviceResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fservice_2eproto::scc_info_SetDeviceResp.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.SetDeviceResp)
}
SetDeviceResp::SetDeviceResp(const SetDeviceResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:fsm.SetDeviceResp)
}

void SetDeviceResp::SharedCtor() {
  status_ = 0;
}

SetDeviceResp::~SetDeviceResp() {
  // @@protoc_insertion_point(destructor:fsm.SetDeviceResp)
  SharedDtor();
}

void SetDeviceResp::SharedDtor() {
}

void SetDeviceResp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SetDeviceResp::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fservice_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetDeviceResp& SetDeviceResp::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fservice_2eproto::scc_info_SetDeviceResp.base);
  return *internal_default_instance();
}


void SetDeviceResp::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.SetDeviceResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = 0;
  _internal_metadata_.Clear();
}

bool SetDeviceResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.SetDeviceResp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.SetDeviceResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.SetDeviceResp)
  return false;
#undef DO_
}

void SetDeviceResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.SetDeviceResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.SetDeviceResp)
}

::google::protobuf::uint8* SetDeviceResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.SetDeviceResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.SetDeviceResp)
  return target;
}

size_t SetDeviceResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.SetDeviceResp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 status = 1;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetDeviceResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.SetDeviceResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDeviceResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetDeviceResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.SetDeviceResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.SetDeviceResp)
    MergeFrom(*source);
  }
}

void SetDeviceResp::MergeFrom(const SetDeviceResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.SetDeviceResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status() != 0) {
    set_status(from.status());
  }
}

void SetDeviceResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.SetDeviceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDeviceResp::CopyFrom(const SetDeviceResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.SetDeviceResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDeviceResp::IsInitialized() const {
  return true;
}

void SetDeviceResp::Swap(SetDeviceResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetDeviceResp::InternalSwap(SetDeviceResp* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SetDeviceResp::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fservice_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fservice_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fsm
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::GetDeviceRq* Arena::CreateMaybeMessage< ::fsm::GetDeviceRq >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::GetDeviceRq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::SetDeviceResp* Arena::CreateMaybeMessage< ::fsm::SetDeviceResp >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::SetDeviceResp >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
