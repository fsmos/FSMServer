// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fsm_cckconfig_VirtPO.proto

#include "fsm_cckconfig_VirtPO.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_fsm_5fcckconfig_5fVirtPO_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Ctrlkey;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_R168Cfgel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VirtP0_Group_subel;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_VirtPO_Subscriber;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_R168Cfg;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VirtP0_Group;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VirtP0_Group_el;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fVirtPO_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_VirtPO_Channel;
}  // namespace protobuf_fsm_5fcckconfig_5fVirtPO_2eproto
namespace protobuf_fsm_5fcckconfig_5fclientinfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fclientinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientInfo;
}  // namespace protobuf_fsm_5fcckconfig_5fclientinfo_2eproto
namespace fsm {
class VirtP0_Group_subelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VirtP0_Group_subel>
      _instance;
} _VirtP0_Group_subel_default_instance_;
class VirtP0_Group_elDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VirtP0_Group_el>
      _instance;
} _VirtP0_Group_el_default_instance_;
class VirtP0_GroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VirtP0_Group>
      _instance;
} _VirtP0_Group_default_instance_;
class VirtPO_SubscriberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VirtPO_Subscriber>
      _instance;
} _VirtPO_Subscriber_default_instance_;
class VirtPO_ChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VirtPO_Channel>
      _instance;
} _VirtPO_Channel_default_instance_;
class R168CfgelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<R168Cfgel>
      _instance;
} _R168Cfgel_default_instance_;
class CtrlkeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Ctrlkey>
      _instance;
} _Ctrlkey_default_instance_;
class R168CfgDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<R168Cfg>
      _instance;
} _R168Cfg_default_instance_;
class VirtP0DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<VirtP0>
      _instance;
} _VirtP0_default_instance_;
}  // namespace fsm
namespace protobuf_fsm_5fcckconfig_5fVirtPO_2eproto {
static void InitDefaultsVirtP0_Group_subel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_VirtP0_Group_subel_default_instance_;
    new (ptr) ::fsm::VirtP0_Group_subel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::VirtP0_Group_subel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VirtP0_Group_subel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVirtP0_Group_subel}, {}};

static void InitDefaultsVirtP0_Group_el() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_VirtP0_Group_el_default_instance_;
    new (ptr) ::fsm::VirtP0_Group_el();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::VirtP0_Group_el::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VirtP0_Group_el =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVirtP0_Group_el}, {
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group_subel.base,}};

static void InitDefaultsVirtP0_Group() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_VirtP0_Group_default_instance_;
    new (ptr) ::fsm::VirtP0_Group();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::VirtP0_Group::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VirtP0_Group =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVirtP0_Group}, {
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group_el.base,}};

static void InitDefaultsVirtPO_Subscriber() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_VirtPO_Subscriber_default_instance_;
    new (ptr) ::fsm::VirtPO_Subscriber();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::VirtPO_Subscriber::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_VirtPO_Subscriber =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVirtPO_Subscriber}, {}};

static void InitDefaultsVirtPO_Channel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_VirtPO_Channel_default_instance_;
    new (ptr) ::fsm::VirtPO_Channel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::VirtPO_Channel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_VirtPO_Channel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsVirtPO_Channel}, {
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtPO_Subscriber.base,}};

static void InitDefaultsR168Cfgel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_R168Cfgel_default_instance_;
    new (ptr) ::fsm::R168Cfgel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::R168Cfgel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_R168Cfgel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsR168Cfgel}, {}};

static void InitDefaultsCtrlkey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_Ctrlkey_default_instance_;
    new (ptr) ::fsm::Ctrlkey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::Ctrlkey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Ctrlkey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCtrlkey}, {}};

static void InitDefaultsR168Cfg() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_R168Cfg_default_instance_;
    new (ptr) ::fsm::R168Cfg();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::R168Cfg::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_R168Cfg =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsR168Cfg}, {
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_R168Cfgel.base,}};

static void InitDefaultsVirtP0() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_VirtP0_default_instance_;
    new (ptr) ::fsm::VirtP0();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::VirtP0::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_VirtP0 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsVirtP0}, {
      &protobuf_fsm_5fcckconfig_5fclientinfo_2eproto::scc_info_ClientInfo.base,
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_R168Cfg.base,
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group.base,
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_Ctrlkey.base,
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtPO_Channel.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_VirtP0_Group_subel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VirtP0_Group_el.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VirtP0_Group.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VirtPO_Subscriber.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VirtPO_Channel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_R168Cfgel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Ctrlkey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_R168Cfg.base);
  ::google::protobuf::internal::InitSCC(&scc_info_VirtP0.base);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0_Group_subel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0_Group_subel, abonent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0_Group_el, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0_Group_el, grp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0_Group, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0_Group, cnfg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0_Group, csvg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Subscriber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Subscriber, sipname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Subscriber, sipnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Subscriber, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Channel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Channel, self_sip_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Channel, self_sip_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Channel, self_sip_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Channel, min_self_rtp_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Channel, max_self_rtp_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Channel, audio_device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtPO_Channel, subscriberforcall_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::R168Cfgel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::R168Cfgel, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::R168Cfgel, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::Ctrlkey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::Ctrlkey, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::Ctrlkey, flags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::R168Cfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::R168Cfg, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0, client_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0, r168_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0, grp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0, rlk_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::VirtP0, channel_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fsm::VirtP0_Group_subel)},
  { 6, -1, sizeof(::fsm::VirtP0_Group_el)},
  { 12, -1, sizeof(::fsm::VirtP0_Group)},
  { 19, -1, sizeof(::fsm::VirtPO_Subscriber)},
  { 27, -1, sizeof(::fsm::VirtPO_Channel)},
  { 39, -1, sizeof(::fsm::R168Cfgel)},
  { 46, -1, sizeof(::fsm::Ctrlkey)},
  { 53, -1, sizeof(::fsm::R168Cfg)},
  { 59, -1, sizeof(::fsm::VirtP0)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_VirtP0_Group_subel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_VirtP0_Group_el_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_VirtP0_Group_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_VirtPO_Subscriber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_VirtPO_Channel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_R168Cfgel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_Ctrlkey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_R168Cfg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_VirtP0_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "fsm_cckconfig_VirtPO.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032fsm_cckconfig_VirtPO.proto\022\003fsm\032\036fsm_c"
      "ckconfig_clientinfo.proto\"%\n\022VirtP0_Grou"
      "p_subel\022\017\n\007abonent\030\001 \003(\r\"7\n\017VirtP0_Group"
      "_el\022$\n\003grp\030\001 \003(\0132\027.fsm.VirtP0_Group_sube"
      "l\"V\n\014VirtP0_Group\022\"\n\004cnfg\030\001 \001(\0132\024.fsm.Vi"
      "rtP0_Group_el\022\"\n\004csvg\030\002 \001(\0132\024.fsm.VirtP0"
      "_Group_el\"F\n\021VirtPO_Subscriber\022\017\n\007sipnam"
      "e\030\001 \001(\t\022\021\n\tsipnumber\030\002 \001(\r\022\r\n\005flags\030\003 \001("
      "\r\"\326\001\n\016VirtPO_Channel\022\025\n\rself_sip_port\030\001 "
      "\001(\r\022\027\n\017self_sip_number\030\002 \001(\r\022\025\n\rself_sip"
      "_name\030\003 \001(\t\022\031\n\021min_self_rtp_port\030\004 \001(\r\022\031"
      "\n\021max_self_rtp_port\030\005 \001(\r\022\024\n\014audio_devic"
      "e\030\006 \001(\t\0221\n\021SubscriberForCall\030\007 \003(\0132\026.fsm"
      ".VirtPO_Subscriber\"%\n\tR168Cfgel\022\n\n\002ip\030\001 "
      "\001(\r\022\014\n\004port\030\002 \001(\r\"%\n\007Ctrlkey\022\013\n\003key\030\001 \001("
      "\t\022\r\n\005flags\030\002 \001(\r\"*\n\007R168Cfg\022\037\n\007channel\030\001"
      " \003(\0132\016.fsm.R168Cfgel\"\270\001\n\006VirtP0\022\037\n\006clien"
      "t\030\001 \001(\0132\017.fsm.ClientInfo\022\032\n\004r168\030\002 \001(\0132\014"
      ".fsm.R168Cfg\022\036\n\003grp\030\003 \001(\0132\021.fsm.VirtP0_G"
      "roup\022\020\n\010rlk_port\030\004 \001(\005\022\031\n\003key\030\005 \001(\0132\014.fs"
      "m.Ctrlkey\022$\n\007channel\030\006 \003(\0132\023.fsm.VirtPO_"
      "Channelb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 855);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fsm_cckconfig_VirtPO.proto", &protobuf_RegisterTypes);
  ::protobuf_fsm_5fcckconfig_5fclientinfo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_fsm_5fcckconfig_5fVirtPO_2eproto
namespace fsm {

// ===================================================================

void VirtP0_Group_subel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VirtP0_Group_subel::kAbonentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VirtP0_Group_subel::VirtP0_Group_subel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group_subel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.VirtP0_Group_subel)
}
VirtP0_Group_subel::VirtP0_Group_subel(const VirtP0_Group_subel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      abonent_(from.abonent_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fsm.VirtP0_Group_subel)
}

void VirtP0_Group_subel::SharedCtor() {
}

VirtP0_Group_subel::~VirtP0_Group_subel() {
  // @@protoc_insertion_point(destructor:fsm.VirtP0_Group_subel)
  SharedDtor();
}

void VirtP0_Group_subel::SharedDtor() {
}

void VirtP0_Group_subel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VirtP0_Group_subel::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VirtP0_Group_subel& VirtP0_Group_subel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group_subel.base);
  return *internal_default_instance();
}


void VirtP0_Group_subel::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.VirtP0_Group_subel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  abonent_.Clear();
  _internal_metadata_.Clear();
}

bool VirtP0_Group_subel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.VirtP0_Group_subel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 abonent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_abonent())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_abonent())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.VirtP0_Group_subel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.VirtP0_Group_subel)
  return false;
#undef DO_
}

void VirtP0_Group_subel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.VirtP0_Group_subel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 abonent = 1;
  if (this->abonent_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _abonent_cached_byte_size_));
  }
  for (int i = 0, n = this->abonent_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->abonent(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.VirtP0_Group_subel)
}

::google::protobuf::uint8* VirtP0_Group_subel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.VirtP0_Group_subel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 abonent = 1;
  if (this->abonent_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _abonent_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->abonent_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.VirtP0_Group_subel)
  return target;
}

size_t VirtP0_Group_subel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.VirtP0_Group_subel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 abonent = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->abonent_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _abonent_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VirtP0_Group_subel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.VirtP0_Group_subel)
  GOOGLE_DCHECK_NE(&from, this);
  const VirtP0_Group_subel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VirtP0_Group_subel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.VirtP0_Group_subel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.VirtP0_Group_subel)
    MergeFrom(*source);
  }
}

void VirtP0_Group_subel::MergeFrom(const VirtP0_Group_subel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.VirtP0_Group_subel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  abonent_.MergeFrom(from.abonent_);
}

void VirtP0_Group_subel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.VirtP0_Group_subel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtP0_Group_subel::CopyFrom(const VirtP0_Group_subel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.VirtP0_Group_subel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtP0_Group_subel::IsInitialized() const {
  return true;
}

void VirtP0_Group_subel::Swap(VirtP0_Group_subel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VirtP0_Group_subel::InternalSwap(VirtP0_Group_subel* other) {
  using std::swap;
  abonent_.InternalSwap(&other->abonent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VirtP0_Group_subel::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VirtP0_Group_el::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VirtP0_Group_el::kGrpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VirtP0_Group_el::VirtP0_Group_el()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group_el.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.VirtP0_Group_el)
}
VirtP0_Group_el::VirtP0_Group_el(const VirtP0_Group_el& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      grp_(from.grp_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fsm.VirtP0_Group_el)
}

void VirtP0_Group_el::SharedCtor() {
}

VirtP0_Group_el::~VirtP0_Group_el() {
  // @@protoc_insertion_point(destructor:fsm.VirtP0_Group_el)
  SharedDtor();
}

void VirtP0_Group_el::SharedDtor() {
}

void VirtP0_Group_el::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VirtP0_Group_el::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VirtP0_Group_el& VirtP0_Group_el::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group_el.base);
  return *internal_default_instance();
}


void VirtP0_Group_el::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.VirtP0_Group_el)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grp_.Clear();
  _internal_metadata_.Clear();
}

bool VirtP0_Group_el::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.VirtP0_Group_el)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fsm.VirtP0_Group_subel grp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_grp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.VirtP0_Group_el)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.VirtP0_Group_el)
  return false;
#undef DO_
}

void VirtP0_Group_el::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.VirtP0_Group_el)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .fsm.VirtP0_Group_subel grp = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grp_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->grp(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.VirtP0_Group_el)
}

::google::protobuf::uint8* VirtP0_Group_el::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.VirtP0_Group_el)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .fsm.VirtP0_Group_subel grp = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->grp_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->grp(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.VirtP0_Group_el)
  return target;
}

size_t VirtP0_Group_el::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.VirtP0_Group_el)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .fsm.VirtP0_Group_subel grp = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->grp_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->grp(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VirtP0_Group_el::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.VirtP0_Group_el)
  GOOGLE_DCHECK_NE(&from, this);
  const VirtP0_Group_el* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VirtP0_Group_el>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.VirtP0_Group_el)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.VirtP0_Group_el)
    MergeFrom(*source);
  }
}

void VirtP0_Group_el::MergeFrom(const VirtP0_Group_el& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.VirtP0_Group_el)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grp_.MergeFrom(from.grp_);
}

void VirtP0_Group_el::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.VirtP0_Group_el)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtP0_Group_el::CopyFrom(const VirtP0_Group_el& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.VirtP0_Group_el)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtP0_Group_el::IsInitialized() const {
  return true;
}

void VirtP0_Group_el::Swap(VirtP0_Group_el* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VirtP0_Group_el::InternalSwap(VirtP0_Group_el* other) {
  using std::swap;
  CastToBase(&grp_)->InternalSwap(CastToBase(&other->grp_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VirtP0_Group_el::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VirtP0_Group::InitAsDefaultInstance() {
  ::fsm::_VirtP0_Group_default_instance_._instance.get_mutable()->cnfg_ = const_cast< ::fsm::VirtP0_Group_el*>(
      ::fsm::VirtP0_Group_el::internal_default_instance());
  ::fsm::_VirtP0_Group_default_instance_._instance.get_mutable()->csvg_ = const_cast< ::fsm::VirtP0_Group_el*>(
      ::fsm::VirtP0_Group_el::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VirtP0_Group::kCnfgFieldNumber;
const int VirtP0_Group::kCsvgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VirtP0_Group::VirtP0_Group()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.VirtP0_Group)
}
VirtP0_Group::VirtP0_Group(const VirtP0_Group& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cnfg()) {
    cnfg_ = new ::fsm::VirtP0_Group_el(*from.cnfg_);
  } else {
    cnfg_ = NULL;
  }
  if (from.has_csvg()) {
    csvg_ = new ::fsm::VirtP0_Group_el(*from.csvg_);
  } else {
    csvg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fsm.VirtP0_Group)
}

void VirtP0_Group::SharedCtor() {
  ::memset(&cnfg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&csvg_) -
      reinterpret_cast<char*>(&cnfg_)) + sizeof(csvg_));
}

VirtP0_Group::~VirtP0_Group() {
  // @@protoc_insertion_point(destructor:fsm.VirtP0_Group)
  SharedDtor();
}

void VirtP0_Group::SharedDtor() {
  if (this != internal_default_instance()) delete cnfg_;
  if (this != internal_default_instance()) delete csvg_;
}

void VirtP0_Group::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VirtP0_Group::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VirtP0_Group& VirtP0_Group::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0_Group.base);
  return *internal_default_instance();
}


void VirtP0_Group::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.VirtP0_Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cnfg_ != NULL) {
    delete cnfg_;
  }
  cnfg_ = NULL;
  if (GetArenaNoVirtual() == NULL && csvg_ != NULL) {
    delete csvg_;
  }
  csvg_ = NULL;
  _internal_metadata_.Clear();
}

bool VirtP0_Group::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.VirtP0_Group)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .fsm.VirtP0_Group_el cnfg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cnfg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.VirtP0_Group_el csvg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_csvg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.VirtP0_Group)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.VirtP0_Group)
  return false;
#undef DO_
}

void VirtP0_Group::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.VirtP0_Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.VirtP0_Group_el cnfg = 1;
  if (this->has_cnfg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_cnfg(), output);
  }

  // .fsm.VirtP0_Group_el csvg = 2;
  if (this->has_csvg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_csvg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.VirtP0_Group)
}

::google::protobuf::uint8* VirtP0_Group::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.VirtP0_Group)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.VirtP0_Group_el cnfg = 1;
  if (this->has_cnfg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_cnfg(), deterministic, target);
  }

  // .fsm.VirtP0_Group_el csvg = 2;
  if (this->has_csvg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_csvg(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.VirtP0_Group)
  return target;
}

size_t VirtP0_Group::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.VirtP0_Group)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .fsm.VirtP0_Group_el cnfg = 1;
  if (this->has_cnfg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cnfg_);
  }

  // .fsm.VirtP0_Group_el csvg = 2;
  if (this->has_csvg()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *csvg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VirtP0_Group::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.VirtP0_Group)
  GOOGLE_DCHECK_NE(&from, this);
  const VirtP0_Group* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VirtP0_Group>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.VirtP0_Group)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.VirtP0_Group)
    MergeFrom(*source);
  }
}

void VirtP0_Group::MergeFrom(const VirtP0_Group& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.VirtP0_Group)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cnfg()) {
    mutable_cnfg()->::fsm::VirtP0_Group_el::MergeFrom(from.cnfg());
  }
  if (from.has_csvg()) {
    mutable_csvg()->::fsm::VirtP0_Group_el::MergeFrom(from.csvg());
  }
}

void VirtP0_Group::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.VirtP0_Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtP0_Group::CopyFrom(const VirtP0_Group& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.VirtP0_Group)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtP0_Group::IsInitialized() const {
  return true;
}

void VirtP0_Group::Swap(VirtP0_Group* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VirtP0_Group::InternalSwap(VirtP0_Group* other) {
  using std::swap;
  swap(cnfg_, other->cnfg_);
  swap(csvg_, other->csvg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VirtP0_Group::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VirtPO_Subscriber::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VirtPO_Subscriber::kSipnameFieldNumber;
const int VirtPO_Subscriber::kSipnumberFieldNumber;
const int VirtPO_Subscriber::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VirtPO_Subscriber::VirtPO_Subscriber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtPO_Subscriber.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.VirtPO_Subscriber)
}
VirtPO_Subscriber::VirtPO_Subscriber(const VirtPO_Subscriber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sipname().size() > 0) {
    sipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sipname_);
  }
  ::memcpy(&sipnumber_, &from.sipnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&sipnumber_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:fsm.VirtPO_Subscriber)
}

void VirtPO_Subscriber::SharedCtor() {
  sipname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sipnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&sipnumber_)) + sizeof(flags_));
}

VirtPO_Subscriber::~VirtPO_Subscriber() {
  // @@protoc_insertion_point(destructor:fsm.VirtPO_Subscriber)
  SharedDtor();
}

void VirtPO_Subscriber::SharedDtor() {
  sipname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VirtPO_Subscriber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VirtPO_Subscriber::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VirtPO_Subscriber& VirtPO_Subscriber::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtPO_Subscriber.base);
  return *internal_default_instance();
}


void VirtPO_Subscriber::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.VirtPO_Subscriber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sipname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sipnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&sipnumber_)) + sizeof(flags_));
  _internal_metadata_.Clear();
}

bool VirtPO_Subscriber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.VirtPO_Subscriber)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string sipname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sipname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sipname().data(), static_cast<int>(this->sipname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fsm.VirtPO_Subscriber.sipname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 sipnumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sipnumber_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.VirtPO_Subscriber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.VirtPO_Subscriber)
  return false;
#undef DO_
}

void VirtPO_Subscriber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.VirtPO_Subscriber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sipname = 1;
  if (this->sipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sipname().data(), static_cast<int>(this->sipname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fsm.VirtPO_Subscriber.sipname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sipname(), output);
  }

  // uint32 sipnumber = 2;
  if (this->sipnumber() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sipnumber(), output);
  }

  // uint32 flags = 3;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.VirtPO_Subscriber)
}

::google::protobuf::uint8* VirtPO_Subscriber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.VirtPO_Subscriber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sipname = 1;
  if (this->sipname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sipname().data(), static_cast<int>(this->sipname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fsm.VirtPO_Subscriber.sipname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sipname(), target);
  }

  // uint32 sipnumber = 2;
  if (this->sipnumber() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sipnumber(), target);
  }

  // uint32 flags = 3;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.VirtPO_Subscriber)
  return target;
}

size_t VirtPO_Subscriber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.VirtPO_Subscriber)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string sipname = 1;
  if (this->sipname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sipname());
  }

  // uint32 sipnumber = 2;
  if (this->sipnumber() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->sipnumber());
  }

  // uint32 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VirtPO_Subscriber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.VirtPO_Subscriber)
  GOOGLE_DCHECK_NE(&from, this);
  const VirtPO_Subscriber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VirtPO_Subscriber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.VirtPO_Subscriber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.VirtPO_Subscriber)
    MergeFrom(*source);
  }
}

void VirtPO_Subscriber::MergeFrom(const VirtPO_Subscriber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.VirtPO_Subscriber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sipname().size() > 0) {

    sipname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sipname_);
  }
  if (from.sipnumber() != 0) {
    set_sipnumber(from.sipnumber());
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void VirtPO_Subscriber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.VirtPO_Subscriber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtPO_Subscriber::CopyFrom(const VirtPO_Subscriber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.VirtPO_Subscriber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtPO_Subscriber::IsInitialized() const {
  return true;
}

void VirtPO_Subscriber::Swap(VirtPO_Subscriber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VirtPO_Subscriber::InternalSwap(VirtPO_Subscriber* other) {
  using std::swap;
  sipname_.Swap(&other->sipname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sipnumber_, other->sipnumber_);
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VirtPO_Subscriber::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VirtPO_Channel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VirtPO_Channel::kSelfSipPortFieldNumber;
const int VirtPO_Channel::kSelfSipNumberFieldNumber;
const int VirtPO_Channel::kSelfSipNameFieldNumber;
const int VirtPO_Channel::kMinSelfRtpPortFieldNumber;
const int VirtPO_Channel::kMaxSelfRtpPortFieldNumber;
const int VirtPO_Channel::kAudioDeviceFieldNumber;
const int VirtPO_Channel::kSubscriberForCallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VirtPO_Channel::VirtPO_Channel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtPO_Channel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.VirtPO_Channel)
}
VirtPO_Channel::VirtPO_Channel(const VirtPO_Channel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subscriberforcall_(from.subscriberforcall_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  self_sip_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.self_sip_name().size() > 0) {
    self_sip_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_sip_name_);
  }
  audio_device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio_device().size() > 0) {
    audio_device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_device_);
  }
  ::memcpy(&self_sip_port_, &from.self_sip_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&max_self_rtp_port_) -
    reinterpret_cast<char*>(&self_sip_port_)) + sizeof(max_self_rtp_port_));
  // @@protoc_insertion_point(copy_constructor:fsm.VirtPO_Channel)
}

void VirtPO_Channel::SharedCtor() {
  self_sip_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&self_sip_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_self_rtp_port_) -
      reinterpret_cast<char*>(&self_sip_port_)) + sizeof(max_self_rtp_port_));
}

VirtPO_Channel::~VirtPO_Channel() {
  // @@protoc_insertion_point(destructor:fsm.VirtPO_Channel)
  SharedDtor();
}

void VirtPO_Channel::SharedDtor() {
  self_sip_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VirtPO_Channel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VirtPO_Channel::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VirtPO_Channel& VirtPO_Channel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtPO_Channel.base);
  return *internal_default_instance();
}


void VirtPO_Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.VirtPO_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriberforcall_.Clear();
  self_sip_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&self_sip_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_self_rtp_port_) -
      reinterpret_cast<char*>(&self_sip_port_)) + sizeof(max_self_rtp_port_));
  _internal_metadata_.Clear();
}

bool VirtPO_Channel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.VirtPO_Channel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 self_sip_port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &self_sip_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 self_sip_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &self_sip_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string self_sip_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_self_sip_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->self_sip_name().data(), static_cast<int>(this->self_sip_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fsm.VirtPO_Channel.self_sip_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 min_self_rtp_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &min_self_rtp_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 max_self_rtp_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_self_rtp_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string audio_device = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audio_device()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audio_device().data(), static_cast<int>(this->audio_device().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fsm.VirtPO_Channel.audio_device"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fsm.VirtPO_Subscriber SubscriberForCall = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_subscriberforcall()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.VirtPO_Channel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.VirtPO_Channel)
  return false;
#undef DO_
}

void VirtPO_Channel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.VirtPO_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 self_sip_port = 1;
  if (this->self_sip_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->self_sip_port(), output);
  }

  // uint32 self_sip_number = 2;
  if (this->self_sip_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->self_sip_number(), output);
  }

  // string self_sip_name = 3;
  if (this->self_sip_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_sip_name().data(), static_cast<int>(this->self_sip_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fsm.VirtPO_Channel.self_sip_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->self_sip_name(), output);
  }

  // uint32 min_self_rtp_port = 4;
  if (this->min_self_rtp_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->min_self_rtp_port(), output);
  }

  // uint32 max_self_rtp_port = 5;
  if (this->max_self_rtp_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->max_self_rtp_port(), output);
  }

  // string audio_device = 6;
  if (this->audio_device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_device().data(), static_cast<int>(this->audio_device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fsm.VirtPO_Channel.audio_device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->audio_device(), output);
  }

  // repeated .fsm.VirtPO_Subscriber SubscriberForCall = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscriberforcall_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->subscriberforcall(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.VirtPO_Channel)
}

::google::protobuf::uint8* VirtPO_Channel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.VirtPO_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 self_sip_port = 1;
  if (this->self_sip_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->self_sip_port(), target);
  }

  // uint32 self_sip_number = 2;
  if (this->self_sip_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->self_sip_number(), target);
  }

  // string self_sip_name = 3;
  if (this->self_sip_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->self_sip_name().data(), static_cast<int>(this->self_sip_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fsm.VirtPO_Channel.self_sip_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->self_sip_name(), target);
  }

  // uint32 min_self_rtp_port = 4;
  if (this->min_self_rtp_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->min_self_rtp_port(), target);
  }

  // uint32 max_self_rtp_port = 5;
  if (this->max_self_rtp_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->max_self_rtp_port(), target);
  }

  // string audio_device = 6;
  if (this->audio_device().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audio_device().data(), static_cast<int>(this->audio_device().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fsm.VirtPO_Channel.audio_device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->audio_device(), target);
  }

  // repeated .fsm.VirtPO_Subscriber SubscriberForCall = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subscriberforcall_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->subscriberforcall(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.VirtPO_Channel)
  return target;
}

size_t VirtPO_Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.VirtPO_Channel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .fsm.VirtPO_Subscriber SubscriberForCall = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->subscriberforcall_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subscriberforcall(static_cast<int>(i)));
    }
  }

  // string self_sip_name = 3;
  if (this->self_sip_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->self_sip_name());
  }

  // string audio_device = 6;
  if (this->audio_device().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audio_device());
  }

  // uint32 self_sip_port = 1;
  if (this->self_sip_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->self_sip_port());
  }

  // uint32 self_sip_number = 2;
  if (this->self_sip_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->self_sip_number());
  }

  // uint32 min_self_rtp_port = 4;
  if (this->min_self_rtp_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->min_self_rtp_port());
  }

  // uint32 max_self_rtp_port = 5;
  if (this->max_self_rtp_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->max_self_rtp_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VirtPO_Channel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.VirtPO_Channel)
  GOOGLE_DCHECK_NE(&from, this);
  const VirtPO_Channel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VirtPO_Channel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.VirtPO_Channel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.VirtPO_Channel)
    MergeFrom(*source);
  }
}

void VirtPO_Channel::MergeFrom(const VirtPO_Channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.VirtPO_Channel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscriberforcall_.MergeFrom(from.subscriberforcall_);
  if (from.self_sip_name().size() > 0) {

    self_sip_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.self_sip_name_);
  }
  if (from.audio_device().size() > 0) {

    audio_device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_device_);
  }
  if (from.self_sip_port() != 0) {
    set_self_sip_port(from.self_sip_port());
  }
  if (from.self_sip_number() != 0) {
    set_self_sip_number(from.self_sip_number());
  }
  if (from.min_self_rtp_port() != 0) {
    set_min_self_rtp_port(from.min_self_rtp_port());
  }
  if (from.max_self_rtp_port() != 0) {
    set_max_self_rtp_port(from.max_self_rtp_port());
  }
}

void VirtPO_Channel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.VirtPO_Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtPO_Channel::CopyFrom(const VirtPO_Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.VirtPO_Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtPO_Channel::IsInitialized() const {
  return true;
}

void VirtPO_Channel::Swap(VirtPO_Channel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VirtPO_Channel::InternalSwap(VirtPO_Channel* other) {
  using std::swap;
  CastToBase(&subscriberforcall_)->InternalSwap(CastToBase(&other->subscriberforcall_));
  self_sip_name_.Swap(&other->self_sip_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  audio_device_.Swap(&other->audio_device_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(self_sip_port_, other->self_sip_port_);
  swap(self_sip_number_, other->self_sip_number_);
  swap(min_self_rtp_port_, other->min_self_rtp_port_);
  swap(max_self_rtp_port_, other->max_self_rtp_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VirtPO_Channel::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void R168Cfgel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int R168Cfgel::kIpFieldNumber;
const int R168Cfgel::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

R168Cfgel::R168Cfgel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_R168Cfgel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.R168Cfgel)
}
R168Cfgel::R168Cfgel(const R168Cfgel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ip_, &from.ip_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&ip_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:fsm.R168Cfgel)
}

void R168Cfgel::SharedCtor() {
  ::memset(&ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&ip_)) + sizeof(port_));
}

R168Cfgel::~R168Cfgel() {
  // @@protoc_insertion_point(destructor:fsm.R168Cfgel)
  SharedDtor();
}

void R168Cfgel::SharedDtor() {
}

void R168Cfgel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* R168Cfgel::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const R168Cfgel& R168Cfgel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_R168Cfgel.base);
  return *internal_default_instance();
}


void R168Cfgel::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.R168Cfgel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ip_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&ip_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool R168Cfgel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.R168Cfgel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.R168Cfgel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.R168Cfgel)
  return false;
#undef DO_
}

void R168Cfgel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.R168Cfgel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ip = 1;
  if (this->ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ip(), output);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.R168Cfgel)
}

::google::protobuf::uint8* R168Cfgel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.R168Cfgel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ip = 1;
  if (this->ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ip(), target);
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.R168Cfgel)
  return target;
}

size_t R168Cfgel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.R168Cfgel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 ip = 1;
  if (this->ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ip());
  }

  // uint32 port = 2;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void R168Cfgel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.R168Cfgel)
  GOOGLE_DCHECK_NE(&from, this);
  const R168Cfgel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const R168Cfgel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.R168Cfgel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.R168Cfgel)
    MergeFrom(*source);
  }
}

void R168Cfgel::MergeFrom(const R168Cfgel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.R168Cfgel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip() != 0) {
    set_ip(from.ip());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void R168Cfgel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.R168Cfgel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void R168Cfgel::CopyFrom(const R168Cfgel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.R168Cfgel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool R168Cfgel::IsInitialized() const {
  return true;
}

void R168Cfgel::Swap(R168Cfgel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void R168Cfgel::InternalSwap(R168Cfgel* other) {
  using std::swap;
  swap(ip_, other->ip_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata R168Cfgel::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Ctrlkey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Ctrlkey::kKeyFieldNumber;
const int Ctrlkey::kFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Ctrlkey::Ctrlkey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_Ctrlkey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.Ctrlkey)
}
Ctrlkey::Ctrlkey(const Ctrlkey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:fsm.Ctrlkey)
}

void Ctrlkey::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flags_ = 0u;
}

Ctrlkey::~Ctrlkey() {
  // @@protoc_insertion_point(destructor:fsm.Ctrlkey)
  SharedDtor();
}

void Ctrlkey::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Ctrlkey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Ctrlkey::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Ctrlkey& Ctrlkey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_Ctrlkey.base);
  return *internal_default_instance();
}


void Ctrlkey::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.Ctrlkey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  flags_ = 0u;
  _internal_metadata_.Clear();
}

bool Ctrlkey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.Ctrlkey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "fsm.Ctrlkey.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flags = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.Ctrlkey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.Ctrlkey)
  return false;
#undef DO_
}

void Ctrlkey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.Ctrlkey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fsm.Ctrlkey.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->flags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.Ctrlkey)
}

::google::protobuf::uint8* Ctrlkey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.Ctrlkey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "fsm.Ctrlkey.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->flags(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.Ctrlkey)
  return target;
}

size_t Ctrlkey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.Ctrlkey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ctrlkey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.Ctrlkey)
  GOOGLE_DCHECK_NE(&from, this);
  const Ctrlkey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Ctrlkey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.Ctrlkey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.Ctrlkey)
    MergeFrom(*source);
  }
}

void Ctrlkey::MergeFrom(const Ctrlkey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.Ctrlkey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.flags() != 0) {
    set_flags(from.flags());
  }
}

void Ctrlkey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.Ctrlkey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ctrlkey::CopyFrom(const Ctrlkey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.Ctrlkey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ctrlkey::IsInitialized() const {
  return true;
}

void Ctrlkey::Swap(Ctrlkey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Ctrlkey::InternalSwap(Ctrlkey* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(flags_, other->flags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Ctrlkey::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void R168Cfg::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int R168Cfg::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

R168Cfg::R168Cfg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_R168Cfg.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.R168Cfg)
}
R168Cfg::R168Cfg(const R168Cfg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_(from.channel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fsm.R168Cfg)
}

void R168Cfg::SharedCtor() {
}

R168Cfg::~R168Cfg() {
  // @@protoc_insertion_point(destructor:fsm.R168Cfg)
  SharedDtor();
}

void R168Cfg::SharedDtor() {
}

void R168Cfg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* R168Cfg::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const R168Cfg& R168Cfg::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_R168Cfg.base);
  return *internal_default_instance();
}


void R168Cfg::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.R168Cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.Clear();
  _internal_metadata_.Clear();
}

bool R168Cfg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.R168Cfg)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fsm.R168Cfgel channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.R168Cfg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.R168Cfg)
  return false;
#undef DO_
}

void R168Cfg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.R168Cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .fsm.R168Cfgel channel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->channel(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.R168Cfg)
}

::google::protobuf::uint8* R168Cfg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.R168Cfg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .fsm.R168Cfgel channel = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.R168Cfg)
  return target;
}

size_t R168Cfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.R168Cfg)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .fsm.R168Cfgel channel = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void R168Cfg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.R168Cfg)
  GOOGLE_DCHECK_NE(&from, this);
  const R168Cfg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const R168Cfg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.R168Cfg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.R168Cfg)
    MergeFrom(*source);
  }
}

void R168Cfg::MergeFrom(const R168Cfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.R168Cfg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_.MergeFrom(from.channel_);
}

void R168Cfg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.R168Cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void R168Cfg::CopyFrom(const R168Cfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.R168Cfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool R168Cfg::IsInitialized() const {
  return true;
}

void R168Cfg::Swap(R168Cfg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void R168Cfg::InternalSwap(R168Cfg* other) {
  using std::swap;
  CastToBase(&channel_)->InternalSwap(CastToBase(&other->channel_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata R168Cfg::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VirtP0::InitAsDefaultInstance() {
  ::fsm::_VirtP0_default_instance_._instance.get_mutable()->client_ = const_cast< ::fsm::ClientInfo*>(
      ::fsm::ClientInfo::internal_default_instance());
  ::fsm::_VirtP0_default_instance_._instance.get_mutable()->r168_ = const_cast< ::fsm::R168Cfg*>(
      ::fsm::R168Cfg::internal_default_instance());
  ::fsm::_VirtP0_default_instance_._instance.get_mutable()->grp_ = const_cast< ::fsm::VirtP0_Group*>(
      ::fsm::VirtP0_Group::internal_default_instance());
  ::fsm::_VirtP0_default_instance_._instance.get_mutable()->key_ = const_cast< ::fsm::Ctrlkey*>(
      ::fsm::Ctrlkey::internal_default_instance());
}
void VirtP0::clear_client() {
  if (GetArenaNoVirtual() == NULL && client_ != NULL) {
    delete client_;
  }
  client_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VirtP0::kClientFieldNumber;
const int VirtP0::kR168FieldNumber;
const int VirtP0::kGrpFieldNumber;
const int VirtP0::kRlkPortFieldNumber;
const int VirtP0::kKeyFieldNumber;
const int VirtP0::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VirtP0::VirtP0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.VirtP0)
}
VirtP0::VirtP0(const VirtP0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_(from.channel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_client()) {
    client_ = new ::fsm::ClientInfo(*from.client_);
  } else {
    client_ = NULL;
  }
  if (from.has_r168()) {
    r168_ = new ::fsm::R168Cfg(*from.r168_);
  } else {
    r168_ = NULL;
  }
  if (from.has_grp()) {
    grp_ = new ::fsm::VirtP0_Group(*from.grp_);
  } else {
    grp_ = NULL;
  }
  if (from.has_key()) {
    key_ = new ::fsm::Ctrlkey(*from.key_);
  } else {
    key_ = NULL;
  }
  rlk_port_ = from.rlk_port_;
  // @@protoc_insertion_point(copy_constructor:fsm.VirtP0)
}

void VirtP0::SharedCtor() {
  ::memset(&client_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rlk_port_) -
      reinterpret_cast<char*>(&client_)) + sizeof(rlk_port_));
}

VirtP0::~VirtP0() {
  // @@protoc_insertion_point(destructor:fsm.VirtP0)
  SharedDtor();
}

void VirtP0::SharedDtor() {
  if (this != internal_default_instance()) delete client_;
  if (this != internal_default_instance()) delete r168_;
  if (this != internal_default_instance()) delete grp_;
  if (this != internal_default_instance()) delete key_;
}

void VirtP0::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* VirtP0::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VirtP0& VirtP0::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::scc_info_VirtP0.base);
  return *internal_default_instance();
}


void VirtP0::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.VirtP0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.Clear();
  if (GetArenaNoVirtual() == NULL && client_ != NULL) {
    delete client_;
  }
  client_ = NULL;
  if (GetArenaNoVirtual() == NULL && r168_ != NULL) {
    delete r168_;
  }
  r168_ = NULL;
  if (GetArenaNoVirtual() == NULL && grp_ != NULL) {
    delete grp_;
  }
  grp_ = NULL;
  if (GetArenaNoVirtual() == NULL && key_ != NULL) {
    delete key_;
  }
  key_ = NULL;
  rlk_port_ = 0;
  _internal_metadata_.Clear();
}

bool VirtP0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.VirtP0)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .fsm.ClientInfo client = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.R168Cfg r168 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_r168()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.VirtP0_Group grp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_grp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rlk_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rlk_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.Ctrlkey key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fsm.VirtPO_Channel channel = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.VirtP0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.VirtP0)
  return false;
#undef DO_
}

void VirtP0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.VirtP0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.ClientInfo client = 1;
  if (this->has_client()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_client(), output);
  }

  // .fsm.R168Cfg r168 = 2;
  if (this->has_r168()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_r168(), output);
  }

  // .fsm.VirtP0_Group grp = 3;
  if (this->has_grp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_grp(), output);
  }

  // int32 rlk_port = 4;
  if (this->rlk_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->rlk_port(), output);
  }

  // .fsm.Ctrlkey key = 5;
  if (this->has_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_key(), output);
  }

  // repeated .fsm.VirtPO_Channel channel = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->channel(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.VirtP0)
}

::google::protobuf::uint8* VirtP0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.VirtP0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.ClientInfo client = 1;
  if (this->has_client()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_client(), deterministic, target);
  }

  // .fsm.R168Cfg r168 = 2;
  if (this->has_r168()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_r168(), deterministic, target);
  }

  // .fsm.VirtP0_Group grp = 3;
  if (this->has_grp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_grp(), deterministic, target);
  }

  // int32 rlk_port = 4;
  if (this->rlk_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->rlk_port(), target);
  }

  // .fsm.Ctrlkey key = 5;
  if (this->has_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_key(), deterministic, target);
  }

  // repeated .fsm.VirtPO_Channel channel = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.VirtP0)
  return target;
}

size_t VirtP0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.VirtP0)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .fsm.VirtPO_Channel channel = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->channel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel(static_cast<int>(i)));
    }
  }

  // .fsm.ClientInfo client = 1;
  if (this->has_client()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_);
  }

  // .fsm.R168Cfg r168 = 2;
  if (this->has_r168()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *r168_);
  }

  // .fsm.VirtP0_Group grp = 3;
  if (this->has_grp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *grp_);
  }

  // .fsm.Ctrlkey key = 5;
  if (this->has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // int32 rlk_port = 4;
  if (this->rlk_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rlk_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VirtP0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.VirtP0)
  GOOGLE_DCHECK_NE(&from, this);
  const VirtP0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VirtP0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.VirtP0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.VirtP0)
    MergeFrom(*source);
  }
}

void VirtP0::MergeFrom(const VirtP0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.VirtP0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_.MergeFrom(from.channel_);
  if (from.has_client()) {
    mutable_client()->::fsm::ClientInfo::MergeFrom(from.client());
  }
  if (from.has_r168()) {
    mutable_r168()->::fsm::R168Cfg::MergeFrom(from.r168());
  }
  if (from.has_grp()) {
    mutable_grp()->::fsm::VirtP0_Group::MergeFrom(from.grp());
  }
  if (from.has_key()) {
    mutable_key()->::fsm::Ctrlkey::MergeFrom(from.key());
  }
  if (from.rlk_port() != 0) {
    set_rlk_port(from.rlk_port());
  }
}

void VirtP0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.VirtP0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VirtP0::CopyFrom(const VirtP0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.VirtP0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VirtP0::IsInitialized() const {
  return true;
}

void VirtP0::Swap(VirtP0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VirtP0::InternalSwap(VirtP0* other) {
  using std::swap;
  CastToBase(&channel_)->InternalSwap(CastToBase(&other->channel_));
  swap(client_, other->client_);
  swap(r168_, other->r168_);
  swap(grp_, other->grp_);
  swap(key_, other->key_);
  swap(rlk_port_, other->rlk_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata VirtP0::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fVirtPO_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fsm
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::VirtP0_Group_subel* Arena::CreateMaybeMessage< ::fsm::VirtP0_Group_subel >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::VirtP0_Group_subel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::VirtP0_Group_el* Arena::CreateMaybeMessage< ::fsm::VirtP0_Group_el >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::VirtP0_Group_el >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::VirtP0_Group* Arena::CreateMaybeMessage< ::fsm::VirtP0_Group >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::VirtP0_Group >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::VirtPO_Subscriber* Arena::CreateMaybeMessage< ::fsm::VirtPO_Subscriber >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::VirtPO_Subscriber >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::VirtPO_Channel* Arena::CreateMaybeMessage< ::fsm::VirtPO_Channel >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::VirtPO_Channel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::R168Cfgel* Arena::CreateMaybeMessage< ::fsm::R168Cfgel >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::R168Cfgel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::Ctrlkey* Arena::CreateMaybeMessage< ::fsm::Ctrlkey >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::Ctrlkey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::R168Cfg* Arena::CreateMaybeMessage< ::fsm::R168Cfg >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::R168Cfg >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::VirtP0* Arena::CreateMaybeMessage< ::fsm::VirtP0 >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::VirtP0 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
