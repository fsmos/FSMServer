// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fsm_cckconfig_PO.proto

#ifndef PROTOBUF_INCLUDED_fsm_5fcckconfig_5fPO_2eproto
#define PROTOBUF_INCLUDED_fsm_5fcckconfig_5fPO_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "nanopb.pb.h"
#include "fsm_cckconfig_clientinfo.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fPO_2eproto 

namespace protobuf_fsm_5fcckconfig_5fPO_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_fsm_5fcckconfig_5fPO_2eproto
namespace fsm {
class P0;
class P0DefaultTypeInternal;
extern P0DefaultTypeInternal _P0_default_instance_;
class P0_Group;
class P0_GroupDefaultTypeInternal;
extern P0_GroupDefaultTypeInternal _P0_Group_default_instance_;
class P0_Group_el;
class P0_Group_elDefaultTypeInternal;
extern P0_Group_elDefaultTypeInternal _P0_Group_el_default_instance_;
class P0_Group_subel;
class P0_Group_subelDefaultTypeInternal;
extern P0_Group_subelDefaultTypeInternal _P0_Group_subel_default_instance_;
class PO_Channel;
class PO_ChannelDefaultTypeInternal;
extern PO_ChannelDefaultTypeInternal _PO_Channel_default_instance_;
class PO_Subscriber;
class PO_SubscriberDefaultTypeInternal;
extern PO_SubscriberDefaultTypeInternal _PO_Subscriber_default_instance_;
}  // namespace fsm
namespace google {
namespace protobuf {
template<> ::fsm::P0* Arena::CreateMaybeMessage<::fsm::P0>(Arena*);
template<> ::fsm::P0_Group* Arena::CreateMaybeMessage<::fsm::P0_Group>(Arena*);
template<> ::fsm::P0_Group_el* Arena::CreateMaybeMessage<::fsm::P0_Group_el>(Arena*);
template<> ::fsm::P0_Group_subel* Arena::CreateMaybeMessage<::fsm::P0_Group_subel>(Arena*);
template<> ::fsm::PO_Channel* Arena::CreateMaybeMessage<::fsm::PO_Channel>(Arena*);
template<> ::fsm::PO_Subscriber* Arena::CreateMaybeMessage<::fsm::PO_Subscriber>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace fsm {

// ===================================================================

class P0_Group_subel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.P0_Group_subel) */ {
 public:
  P0_Group_subel();
  virtual ~P0_Group_subel();

  P0_Group_subel(const P0_Group_subel& from);

  inline P0_Group_subel& operator=(const P0_Group_subel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  P0_Group_subel(P0_Group_subel&& from) noexcept
    : P0_Group_subel() {
    *this = ::std::move(from);
  }

  inline P0_Group_subel& operator=(P0_Group_subel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const P0_Group_subel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const P0_Group_subel* internal_default_instance() {
    return reinterpret_cast<const P0_Group_subel*>(
               &_P0_Group_subel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(P0_Group_subel* other);
  friend void swap(P0_Group_subel& a, P0_Group_subel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline P0_Group_subel* New() const final {
    return CreateMaybeMessage<P0_Group_subel>(NULL);
  }

  P0_Group_subel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<P0_Group_subel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const P0_Group_subel& from);
  void MergeFrom(const P0_Group_subel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(P0_Group_subel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 abonent = 1 [(.nanopb) = {
  int abonent_size() const;
  void clear_abonent();
  static const int kAbonentFieldNumber = 1;
  ::google::protobuf::uint32 abonent(int index) const;
  void set_abonent(int index, ::google::protobuf::uint32 value);
  void add_abonent(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      abonent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_abonent();

  // @@protoc_insertion_point(class_scope:fsm.P0_Group_subel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > abonent_;
  mutable int _abonent_cached_byte_size_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P0_Group_el : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.P0_Group_el) */ {
 public:
  P0_Group_el();
  virtual ~P0_Group_el();

  P0_Group_el(const P0_Group_el& from);

  inline P0_Group_el& operator=(const P0_Group_el& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  P0_Group_el(P0_Group_el&& from) noexcept
    : P0_Group_el() {
    *this = ::std::move(from);
  }

  inline P0_Group_el& operator=(P0_Group_el&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const P0_Group_el& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const P0_Group_el* internal_default_instance() {
    return reinterpret_cast<const P0_Group_el*>(
               &_P0_Group_el_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(P0_Group_el* other);
  friend void swap(P0_Group_el& a, P0_Group_el& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline P0_Group_el* New() const final {
    return CreateMaybeMessage<P0_Group_el>(NULL);
  }

  P0_Group_el* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<P0_Group_el>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const P0_Group_el& from);
  void MergeFrom(const P0_Group_el& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(P0_Group_el* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fsm.P0_Group_subel grp = 1 [(.nanopb) = {
  int grp_size() const;
  void clear_grp();
  static const int kGrpFieldNumber = 1;
  ::fsm::P0_Group_subel* mutable_grp(int index);
  ::google::protobuf::RepeatedPtrField< ::fsm::P0_Group_subel >*
      mutable_grp();
  const ::fsm::P0_Group_subel& grp(int index) const;
  ::fsm::P0_Group_subel* add_grp();
  const ::google::protobuf::RepeatedPtrField< ::fsm::P0_Group_subel >&
      grp() const;

  // @@protoc_insertion_point(class_scope:fsm.P0_Group_el)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fsm::P0_Group_subel > grp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P0_Group : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.P0_Group) */ {
 public:
  P0_Group();
  virtual ~P0_Group();

  P0_Group(const P0_Group& from);

  inline P0_Group& operator=(const P0_Group& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  P0_Group(P0_Group&& from) noexcept
    : P0_Group() {
    *this = ::std::move(from);
  }

  inline P0_Group& operator=(P0_Group&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const P0_Group& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const P0_Group* internal_default_instance() {
    return reinterpret_cast<const P0_Group*>(
               &_P0_Group_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(P0_Group* other);
  friend void swap(P0_Group& a, P0_Group& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline P0_Group* New() const final {
    return CreateMaybeMessage<P0_Group>(NULL);
  }

  P0_Group* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<P0_Group>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const P0_Group& from);
  void MergeFrom(const P0_Group& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(P0_Group* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .fsm.P0_Group_el cnfg = 1;
  bool has_cnfg() const;
  void clear_cnfg();
  static const int kCnfgFieldNumber = 1;
  private:
  const ::fsm::P0_Group_el& _internal_cnfg() const;
  public:
  const ::fsm::P0_Group_el& cnfg() const;
  ::fsm::P0_Group_el* release_cnfg();
  ::fsm::P0_Group_el* mutable_cnfg();
  void set_allocated_cnfg(::fsm::P0_Group_el* cnfg);

  // .fsm.P0_Group_el csvg = 2;
  bool has_csvg() const;
  void clear_csvg();
  static const int kCsvgFieldNumber = 2;
  private:
  const ::fsm::P0_Group_el& _internal_csvg() const;
  public:
  const ::fsm::P0_Group_el& csvg() const;
  ::fsm::P0_Group_el* release_csvg();
  ::fsm::P0_Group_el* mutable_csvg();
  void set_allocated_csvg(::fsm::P0_Group_el* csvg);

  // @@protoc_insertion_point(class_scope:fsm.P0_Group)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::fsm::P0_Group_el* cnfg_;
  ::fsm::P0_Group_el* csvg_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PO_Subscriber : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.PO_Subscriber) */ {
 public:
  PO_Subscriber();
  virtual ~PO_Subscriber();

  PO_Subscriber(const PO_Subscriber& from);

  inline PO_Subscriber& operator=(const PO_Subscriber& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PO_Subscriber(PO_Subscriber&& from) noexcept
    : PO_Subscriber() {
    *this = ::std::move(from);
  }

  inline PO_Subscriber& operator=(PO_Subscriber&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PO_Subscriber& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PO_Subscriber* internal_default_instance() {
    return reinterpret_cast<const PO_Subscriber*>(
               &_PO_Subscriber_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PO_Subscriber* other);
  friend void swap(PO_Subscriber& a, PO_Subscriber& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PO_Subscriber* New() const final {
    return CreateMaybeMessage<PO_Subscriber>(NULL);
  }

  PO_Subscriber* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PO_Subscriber>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PO_Subscriber& from);
  void MergeFrom(const PO_Subscriber& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PO_Subscriber* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 sip_number = 1;
  void clear_sip_number();
  static const int kSipNumberFieldNumber = 1;
  ::google::protobuf::uint32 sip_number() const;
  void set_sip_number(::google::protobuf::uint32 value);

  // uint32 flags = 2;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::uint32 flags() const;
  void set_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fsm.PO_Subscriber)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 sip_number_;
  ::google::protobuf::uint32 flags_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PO_Channel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.PO_Channel) */ {
 public:
  PO_Channel();
  virtual ~PO_Channel();

  PO_Channel(const PO_Channel& from);

  inline PO_Channel& operator=(const PO_Channel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PO_Channel(PO_Channel&& from) noexcept
    : PO_Channel() {
    *this = ::std::move(from);
  }

  inline PO_Channel& operator=(PO_Channel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PO_Channel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PO_Channel* internal_default_instance() {
    return reinterpret_cast<const PO_Channel*>(
               &_PO_Channel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PO_Channel* other);
  friend void swap(PO_Channel& a, PO_Channel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PO_Channel* New() const final {
    return CreateMaybeMessage<PO_Channel>(NULL);
  }

  PO_Channel* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PO_Channel>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PO_Channel& from);
  void MergeFrom(const PO_Channel& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PO_Channel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fsm.PO_Subscriber SubscriberForCall = 5 [(.nanopb) = {
  int subscriberforcall_size() const;
  void clear_subscriberforcall();
  static const int kSubscriberForCallFieldNumber = 5;
  ::fsm::PO_Subscriber* mutable_subscriberforcall(int index);
  ::google::protobuf::RepeatedPtrField< ::fsm::PO_Subscriber >*
      mutable_subscriberforcall();
  const ::fsm::PO_Subscriber& subscriberforcall(int index) const;
  ::fsm::PO_Subscriber* add_subscriberforcall();
  const ::google::protobuf::RepeatedPtrField< ::fsm::PO_Subscriber >&
      subscriberforcall() const;

  // uint32 self_sip_port = 1;
  void clear_self_sip_port();
  static const int kSelfSipPortFieldNumber = 1;
  ::google::protobuf::uint32 self_sip_port() const;
  void set_self_sip_port(::google::protobuf::uint32 value);

  // uint32 self_rtp_port = 2;
  void clear_self_rtp_port();
  static const int kSelfRtpPortFieldNumber = 2;
  ::google::protobuf::uint32 self_rtp_port() const;
  void set_self_rtp_port(::google::protobuf::uint32 value);

  // uint32 self_sip_number = 3;
  void clear_self_sip_number();
  static const int kSelfSipNumberFieldNumber = 3;
  ::google::protobuf::uint32 self_sip_number() const;
  void set_self_sip_number(::google::protobuf::uint32 value);

  // uint32 volume = 4;
  void clear_volume();
  static const int kVolumeFieldNumber = 4;
  ::google::protobuf::uint32 volume() const;
  void set_volume(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:fsm.PO_Channel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fsm::PO_Subscriber > subscriberforcall_;
  ::google::protobuf::uint32 self_sip_port_;
  ::google::protobuf::uint32 self_rtp_port_;
  ::google::protobuf::uint32 self_sip_number_;
  ::google::protobuf::uint32 volume_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fPO_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class P0 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fsm.P0) */ {
 public:
  P0();
  virtual ~P0();

  P0(const P0& from);

  inline P0& operator=(const P0& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  P0(P0&& from) noexcept
    : P0() {
    *this = ::std::move(from);
  }

  inline P0& operator=(P0&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const P0& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const P0* internal_default_instance() {
    return reinterpret_cast<const P0*>(
               &_P0_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(P0* other);
  friend void swap(P0& a, P0& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline P0* New() const final {
    return CreateMaybeMessage<P0>(NULL);
  }

  P0* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<P0>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const P0& from);
  void MergeFrom(const P0& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(P0* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fsm.PO_Channel channel = 4 [(.nanopb) = {
  int channel_size() const;
  void clear_channel();
  static const int kChannelFieldNumber = 4;
  ::fsm::PO_Channel* mutable_channel(int index);
  ::google::protobuf::RepeatedPtrField< ::fsm::PO_Channel >*
      mutable_channel();
  const ::fsm::PO_Channel& channel(int index) const;
  ::fsm::PO_Channel* add_channel();
  const ::google::protobuf::RepeatedPtrField< ::fsm::PO_Channel >&
      channel() const;

  // bytes mac = 3 [(.nanopb) = {
  void clear_mac();
  static const int kMacFieldNumber = 3;
  const ::std::string& mac() const;
  void set_mac(const ::std::string& value);
  #if LANG_CXX11
  void set_mac(::std::string&& value);
  #endif
  void set_mac(const char* value);
  void set_mac(const void* value, size_t size);
  ::std::string* mutable_mac();
  ::std::string* release_mac();
  void set_allocated_mac(::std::string* mac);

  // .fsm.ClientInfo client = 1;
  bool has_client() const;
  void clear_client();
  static const int kClientFieldNumber = 1;
  private:
  const ::fsm::ClientInfo& _internal_client() const;
  public:
  const ::fsm::ClientInfo& client() const;
  ::fsm::ClientInfo* release_client();
  ::fsm::ClientInfo* mutable_client();
  void set_allocated_client(::fsm::ClientInfo* client);

  // .fsm.P0_Group grp = 2;
  bool has_grp() const;
  void clear_grp();
  static const int kGrpFieldNumber = 2;
  private:
  const ::fsm::P0_Group& _internal_grp() const;
  public:
  const ::fsm::P0_Group& grp() const;
  ::fsm::P0_Group* release_grp();
  ::fsm::P0_Group* mutable_grp();
  void set_allocated_grp(::fsm::P0_Group* grp);

  // @@protoc_insertion_point(class_scope:fsm.P0)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::fsm::PO_Channel > channel_;
  ::google::protobuf::internal::ArenaStringPtr mac_;
  ::fsm::ClientInfo* client_;
  ::fsm::P0_Group* grp_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_fsm_5fcckconfig_5fPO_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// P0_Group_subel

// repeated uint32 abonent = 1 [(.nanopb) = {
inline int P0_Group_subel::abonent_size() const {
  return abonent_.size();
}
inline void P0_Group_subel::clear_abonent() {
  abonent_.Clear();
}
inline ::google::protobuf::uint32 P0_Group_subel::abonent(int index) const {
  // @@protoc_insertion_point(field_get:fsm.P0_Group_subel.abonent)
  return abonent_.Get(index);
}
inline void P0_Group_subel::set_abonent(int index, ::google::protobuf::uint32 value) {
  abonent_.Set(index, value);
  // @@protoc_insertion_point(field_set:fsm.P0_Group_subel.abonent)
}
inline void P0_Group_subel::add_abonent(::google::protobuf::uint32 value) {
  abonent_.Add(value);
  // @@protoc_insertion_point(field_add:fsm.P0_Group_subel.abonent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
P0_Group_subel::abonent() const {
  // @@protoc_insertion_point(field_list:fsm.P0_Group_subel.abonent)
  return abonent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
P0_Group_subel::mutable_abonent() {
  // @@protoc_insertion_point(field_mutable_list:fsm.P0_Group_subel.abonent)
  return &abonent_;
}

// -------------------------------------------------------------------

// P0_Group_el

// repeated .fsm.P0_Group_subel grp = 1 [(.nanopb) = {
inline int P0_Group_el::grp_size() const {
  return grp_.size();
}
inline void P0_Group_el::clear_grp() {
  grp_.Clear();
}
inline ::fsm::P0_Group_subel* P0_Group_el::mutable_grp(int index) {
  // @@protoc_insertion_point(field_mutable:fsm.P0_Group_el.grp)
  return grp_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fsm::P0_Group_subel >*
P0_Group_el::mutable_grp() {
  // @@protoc_insertion_point(field_mutable_list:fsm.P0_Group_el.grp)
  return &grp_;
}
inline const ::fsm::P0_Group_subel& P0_Group_el::grp(int index) const {
  // @@protoc_insertion_point(field_get:fsm.P0_Group_el.grp)
  return grp_.Get(index);
}
inline ::fsm::P0_Group_subel* P0_Group_el::add_grp() {
  // @@protoc_insertion_point(field_add:fsm.P0_Group_el.grp)
  return grp_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fsm::P0_Group_subel >&
P0_Group_el::grp() const {
  // @@protoc_insertion_point(field_list:fsm.P0_Group_el.grp)
  return grp_;
}

// -------------------------------------------------------------------

// P0_Group

// .fsm.P0_Group_el cnfg = 1;
inline bool P0_Group::has_cnfg() const {
  return this != internal_default_instance() && cnfg_ != NULL;
}
inline void P0_Group::clear_cnfg() {
  if (GetArenaNoVirtual() == NULL && cnfg_ != NULL) {
    delete cnfg_;
  }
  cnfg_ = NULL;
}
inline const ::fsm::P0_Group_el& P0_Group::_internal_cnfg() const {
  return *cnfg_;
}
inline const ::fsm::P0_Group_el& P0_Group::cnfg() const {
  const ::fsm::P0_Group_el* p = cnfg_;
  // @@protoc_insertion_point(field_get:fsm.P0_Group.cnfg)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::P0_Group_el*>(
      &::fsm::_P0_Group_el_default_instance_);
}
inline ::fsm::P0_Group_el* P0_Group::release_cnfg() {
  // @@protoc_insertion_point(field_release:fsm.P0_Group.cnfg)
  
  ::fsm::P0_Group_el* temp = cnfg_;
  cnfg_ = NULL;
  return temp;
}
inline ::fsm::P0_Group_el* P0_Group::mutable_cnfg() {
  
  if (cnfg_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::P0_Group_el>(GetArenaNoVirtual());
    cnfg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.P0_Group.cnfg)
  return cnfg_;
}
inline void P0_Group::set_allocated_cnfg(::fsm::P0_Group_el* cnfg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cnfg_;
  }
  if (cnfg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cnfg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cnfg, submessage_arena);
    }
    
  } else {
    
  }
  cnfg_ = cnfg;
  // @@protoc_insertion_point(field_set_allocated:fsm.P0_Group.cnfg)
}

// .fsm.P0_Group_el csvg = 2;
inline bool P0_Group::has_csvg() const {
  return this != internal_default_instance() && csvg_ != NULL;
}
inline void P0_Group::clear_csvg() {
  if (GetArenaNoVirtual() == NULL && csvg_ != NULL) {
    delete csvg_;
  }
  csvg_ = NULL;
}
inline const ::fsm::P0_Group_el& P0_Group::_internal_csvg() const {
  return *csvg_;
}
inline const ::fsm::P0_Group_el& P0_Group::csvg() const {
  const ::fsm::P0_Group_el* p = csvg_;
  // @@protoc_insertion_point(field_get:fsm.P0_Group.csvg)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::P0_Group_el*>(
      &::fsm::_P0_Group_el_default_instance_);
}
inline ::fsm::P0_Group_el* P0_Group::release_csvg() {
  // @@protoc_insertion_point(field_release:fsm.P0_Group.csvg)
  
  ::fsm::P0_Group_el* temp = csvg_;
  csvg_ = NULL;
  return temp;
}
inline ::fsm::P0_Group_el* P0_Group::mutable_csvg() {
  
  if (csvg_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::P0_Group_el>(GetArenaNoVirtual());
    csvg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.P0_Group.csvg)
  return csvg_;
}
inline void P0_Group::set_allocated_csvg(::fsm::P0_Group_el* csvg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete csvg_;
  }
  if (csvg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      csvg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, csvg, submessage_arena);
    }
    
  } else {
    
  }
  csvg_ = csvg;
  // @@protoc_insertion_point(field_set_allocated:fsm.P0_Group.csvg)
}

// -------------------------------------------------------------------

// PO_Subscriber

// uint32 sip_number = 1;
inline void PO_Subscriber::clear_sip_number() {
  sip_number_ = 0u;
}
inline ::google::protobuf::uint32 PO_Subscriber::sip_number() const {
  // @@protoc_insertion_point(field_get:fsm.PO_Subscriber.sip_number)
  return sip_number_;
}
inline void PO_Subscriber::set_sip_number(::google::protobuf::uint32 value) {
  
  sip_number_ = value;
  // @@protoc_insertion_point(field_set:fsm.PO_Subscriber.sip_number)
}

// uint32 flags = 2;
inline void PO_Subscriber::clear_flags() {
  flags_ = 0u;
}
inline ::google::protobuf::uint32 PO_Subscriber::flags() const {
  // @@protoc_insertion_point(field_get:fsm.PO_Subscriber.flags)
  return flags_;
}
inline void PO_Subscriber::set_flags(::google::protobuf::uint32 value) {
  
  flags_ = value;
  // @@protoc_insertion_point(field_set:fsm.PO_Subscriber.flags)
}

// -------------------------------------------------------------------

// PO_Channel

// uint32 self_sip_port = 1;
inline void PO_Channel::clear_self_sip_port() {
  self_sip_port_ = 0u;
}
inline ::google::protobuf::uint32 PO_Channel::self_sip_port() const {
  // @@protoc_insertion_point(field_get:fsm.PO_Channel.self_sip_port)
  return self_sip_port_;
}
inline void PO_Channel::set_self_sip_port(::google::protobuf::uint32 value) {
  
  self_sip_port_ = value;
  // @@protoc_insertion_point(field_set:fsm.PO_Channel.self_sip_port)
}

// uint32 self_rtp_port = 2;
inline void PO_Channel::clear_self_rtp_port() {
  self_rtp_port_ = 0u;
}
inline ::google::protobuf::uint32 PO_Channel::self_rtp_port() const {
  // @@protoc_insertion_point(field_get:fsm.PO_Channel.self_rtp_port)
  return self_rtp_port_;
}
inline void PO_Channel::set_self_rtp_port(::google::protobuf::uint32 value) {
  
  self_rtp_port_ = value;
  // @@protoc_insertion_point(field_set:fsm.PO_Channel.self_rtp_port)
}

// uint32 self_sip_number = 3;
inline void PO_Channel::clear_self_sip_number() {
  self_sip_number_ = 0u;
}
inline ::google::protobuf::uint32 PO_Channel::self_sip_number() const {
  // @@protoc_insertion_point(field_get:fsm.PO_Channel.self_sip_number)
  return self_sip_number_;
}
inline void PO_Channel::set_self_sip_number(::google::protobuf::uint32 value) {
  
  self_sip_number_ = value;
  // @@protoc_insertion_point(field_set:fsm.PO_Channel.self_sip_number)
}

// uint32 volume = 4;
inline void PO_Channel::clear_volume() {
  volume_ = 0u;
}
inline ::google::protobuf::uint32 PO_Channel::volume() const {
  // @@protoc_insertion_point(field_get:fsm.PO_Channel.volume)
  return volume_;
}
inline void PO_Channel::set_volume(::google::protobuf::uint32 value) {
  
  volume_ = value;
  // @@protoc_insertion_point(field_set:fsm.PO_Channel.volume)
}

// repeated .fsm.PO_Subscriber SubscriberForCall = 5 [(.nanopb) = {
inline int PO_Channel::subscriberforcall_size() const {
  return subscriberforcall_.size();
}
inline void PO_Channel::clear_subscriberforcall() {
  subscriberforcall_.Clear();
}
inline ::fsm::PO_Subscriber* PO_Channel::mutable_subscriberforcall(int index) {
  // @@protoc_insertion_point(field_mutable:fsm.PO_Channel.SubscriberForCall)
  return subscriberforcall_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fsm::PO_Subscriber >*
PO_Channel::mutable_subscriberforcall() {
  // @@protoc_insertion_point(field_mutable_list:fsm.PO_Channel.SubscriberForCall)
  return &subscriberforcall_;
}
inline const ::fsm::PO_Subscriber& PO_Channel::subscriberforcall(int index) const {
  // @@protoc_insertion_point(field_get:fsm.PO_Channel.SubscriberForCall)
  return subscriberforcall_.Get(index);
}
inline ::fsm::PO_Subscriber* PO_Channel::add_subscriberforcall() {
  // @@protoc_insertion_point(field_add:fsm.PO_Channel.SubscriberForCall)
  return subscriberforcall_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fsm::PO_Subscriber >&
PO_Channel::subscriberforcall() const {
  // @@protoc_insertion_point(field_list:fsm.PO_Channel.SubscriberForCall)
  return subscriberforcall_;
}

// -------------------------------------------------------------------

// P0

// .fsm.ClientInfo client = 1;
inline bool P0::has_client() const {
  return this != internal_default_instance() && client_ != NULL;
}
inline const ::fsm::ClientInfo& P0::_internal_client() const {
  return *client_;
}
inline const ::fsm::ClientInfo& P0::client() const {
  const ::fsm::ClientInfo* p = client_;
  // @@protoc_insertion_point(field_get:fsm.P0.client)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::ClientInfo*>(
      &::fsm::_ClientInfo_default_instance_);
}
inline ::fsm::ClientInfo* P0::release_client() {
  // @@protoc_insertion_point(field_release:fsm.P0.client)
  
  ::fsm::ClientInfo* temp = client_;
  client_ = NULL;
  return temp;
}
inline ::fsm::ClientInfo* P0::mutable_client() {
  
  if (client_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::ClientInfo>(GetArenaNoVirtual());
    client_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.P0.client)
  return client_;
}
inline void P0::set_allocated_client(::fsm::ClientInfo* client) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(client_);
  }
  if (client) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      client = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, client, submessage_arena);
    }
    
  } else {
    
  }
  client_ = client;
  // @@protoc_insertion_point(field_set_allocated:fsm.P0.client)
}

// .fsm.P0_Group grp = 2;
inline bool P0::has_grp() const {
  return this != internal_default_instance() && grp_ != NULL;
}
inline void P0::clear_grp() {
  if (GetArenaNoVirtual() == NULL && grp_ != NULL) {
    delete grp_;
  }
  grp_ = NULL;
}
inline const ::fsm::P0_Group& P0::_internal_grp() const {
  return *grp_;
}
inline const ::fsm::P0_Group& P0::grp() const {
  const ::fsm::P0_Group* p = grp_;
  // @@protoc_insertion_point(field_get:fsm.P0.grp)
  return p != NULL ? *p : *reinterpret_cast<const ::fsm::P0_Group*>(
      &::fsm::_P0_Group_default_instance_);
}
inline ::fsm::P0_Group* P0::release_grp() {
  // @@protoc_insertion_point(field_release:fsm.P0.grp)
  
  ::fsm::P0_Group* temp = grp_;
  grp_ = NULL;
  return temp;
}
inline ::fsm::P0_Group* P0::mutable_grp() {
  
  if (grp_ == NULL) {
    auto* p = CreateMaybeMessage<::fsm::P0_Group>(GetArenaNoVirtual());
    grp_ = p;
  }
  // @@protoc_insertion_point(field_mutable:fsm.P0.grp)
  return grp_;
}
inline void P0::set_allocated_grp(::fsm::P0_Group* grp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete grp_;
  }
  if (grp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      grp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, grp, submessage_arena);
    }
    
  } else {
    
  }
  grp_ = grp;
  // @@protoc_insertion_point(field_set_allocated:fsm.P0.grp)
}

// bytes mac = 3 [(.nanopb) = {
inline void P0::clear_mac() {
  mac_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& P0::mac() const {
  // @@protoc_insertion_point(field_get:fsm.P0.mac)
  return mac_.GetNoArena();
}
inline void P0::set_mac(const ::std::string& value) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fsm.P0.mac)
}
#if LANG_CXX11
inline void P0::set_mac(::std::string&& value) {
  
  mac_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fsm.P0.mac)
}
#endif
inline void P0::set_mac(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fsm.P0.mac)
}
inline void P0::set_mac(const void* value, size_t size) {
  
  mac_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fsm.P0.mac)
}
inline ::std::string* P0::mutable_mac() {
  
  // @@protoc_insertion_point(field_mutable:fsm.P0.mac)
  return mac_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* P0::release_mac() {
  // @@protoc_insertion_point(field_release:fsm.P0.mac)
  
  return mac_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void P0::set_allocated_mac(::std::string* mac) {
  if (mac != NULL) {
    
  } else {
    
  }
  mac_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mac);
  // @@protoc_insertion_point(field_set_allocated:fsm.P0.mac)
}

// repeated .fsm.PO_Channel channel = 4 [(.nanopb) = {
inline int P0::channel_size() const {
  return channel_.size();
}
inline void P0::clear_channel() {
  channel_.Clear();
}
inline ::fsm::PO_Channel* P0::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:fsm.P0.channel)
  return channel_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::fsm::PO_Channel >*
P0::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:fsm.P0.channel)
  return &channel_;
}
inline const ::fsm::PO_Channel& P0::channel(int index) const {
  // @@protoc_insertion_point(field_get:fsm.P0.channel)
  return channel_.Get(index);
}
inline ::fsm::PO_Channel* P0::add_channel() {
  // @@protoc_insertion_point(field_add:fsm.P0.channel)
  return channel_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::fsm::PO_Channel >&
P0::channel() const {
  // @@protoc_insertion_point(field_list:fsm.P0.channel)
  return channel_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace fsm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_fsm_5fcckconfig_5fPO_2eproto
