// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fsm_cckconfig_MN.proto

#include "fsm_cckconfig_MN.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_fsm_5fcckconfig_5fMN_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fMN_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MN825_R168;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fMN_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MN825_R168C;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fMN_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MN921_ATS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fMN_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MN921_CB;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fMN_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MN921_MB;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fMN_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MN921_TCH;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fMN_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_MN_Channel;
}  // namespace protobuf_fsm_5fcckconfig_5fMN_2eproto
namespace protobuf_fsm_5fcckconfig_5fclientinfo_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_fsm_5fcckconfig_5fclientinfo_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientInfo;
}  // namespace protobuf_fsm_5fcckconfig_5fclientinfo_2eproto
namespace fsm {
class MN921_MBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MN921_MB>
      _instance;
} _MN921_MB_default_instance_;
class MN921_CBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MN921_CB>
      _instance;
} _MN921_CB_default_instance_;
class MN921_TCHDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MN921_TCH>
      _instance;
} _MN921_TCH_default_instance_;
class MN921_ATSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MN921_ATS>
      _instance;
} _MN921_ATS_default_instance_;
class MN825_R168CDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MN825_R168C>
      _instance;
} _MN825_R168C_default_instance_;
class MN_ChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MN_Channel>
      _instance;
} _MN_Channel_default_instance_;
class MN825_R168DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MN825_R168>
      _instance;
} _MN825_R168_default_instance_;
class MNDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MN>
      _instance;
} _MN_default_instance_;
}  // namespace fsm
namespace protobuf_fsm_5fcckconfig_5fMN_2eproto {
static void InitDefaultsMN921_MB() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_MN921_MB_default_instance_;
    new (ptr) ::fsm::MN921_MB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::MN921_MB::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MN921_MB =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMN921_MB}, {}};

static void InitDefaultsMN921_CB() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_MN921_CB_default_instance_;
    new (ptr) ::fsm::MN921_CB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::MN921_CB::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MN921_CB =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMN921_CB}, {}};

static void InitDefaultsMN921_TCH() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_MN921_TCH_default_instance_;
    new (ptr) ::fsm::MN921_TCH();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::MN921_TCH::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MN921_TCH =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMN921_TCH}, {}};

static void InitDefaultsMN921_ATS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_MN921_ATS_default_instance_;
    new (ptr) ::fsm::MN921_ATS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::MN921_ATS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MN921_ATS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMN921_ATS}, {}};

static void InitDefaultsMN825_R168C() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_MN825_R168C_default_instance_;
    new (ptr) ::fsm::MN825_R168C();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::MN825_R168C::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MN825_R168C =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMN825_R168C}, {}};

static void InitDefaultsMN_Channel() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_MN_Channel_default_instance_;
    new (ptr) ::fsm::MN_Channel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::MN_Channel::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_MN_Channel =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsMN_Channel}, {
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_MB.base,
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_CB.base,
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_TCH.base,
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_ATS.base,
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN825_R168C.base,}};

static void InitDefaultsMN825_R168() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_MN825_R168_default_instance_;
    new (ptr) ::fsm::MN825_R168();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::MN825_R168::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MN825_R168 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMN825_R168}, {}};

static void InitDefaultsMN() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::fsm::_MN_default_instance_;
    new (ptr) ::fsm::MN();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fsm::MN::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_MN =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMN}, {
      &protobuf_fsm_5fcckconfig_5fclientinfo_2eproto::scc_info_ClientInfo.base,
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN825_R168.base,
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN_Channel.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MN921_MB.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MN921_CB.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MN921_TCH.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MN921_ATS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MN825_R168C.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MN_Channel.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MN825_R168.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MN.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_MB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_MB, timeoutputcall_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_CB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_CB, timeoutputcall_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_TCH, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_TCH, typetch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_TCH, timeoutputcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_TCH, mintimeoutputcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_TCH, maxtimeoutputcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_TCH, ocfr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_ATS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN921_ATS, typeats_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN825_R168C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN825_R168C, timeoutputcall_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, self_sip_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, self_rtp_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, self_sip_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, typedev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, subscriberforcall_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, mb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, cb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, tch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, ats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN_Channel, r168_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN825_R168, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN825_R168, r168port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN825_R168, apd_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN, client_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN, r168_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fsm::MN, channel_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::fsm::MN921_MB)},
  { 6, -1, sizeof(::fsm::MN921_CB)},
  { 12, -1, sizeof(::fsm::MN921_TCH)},
  { 22, -1, sizeof(::fsm::MN921_ATS)},
  { 28, -1, sizeof(::fsm::MN825_R168C)},
  { 34, -1, sizeof(::fsm::MN_Channel)},
  { 50, -1, sizeof(::fsm::MN825_R168)},
  { 57, -1, sizeof(::fsm::MN)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_MN921_MB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_MN921_CB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_MN921_TCH_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_MN921_ATS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_MN825_R168C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_MN_Channel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_MN825_R168_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fsm::_MN_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "fsm_cckconfig_MN.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026fsm_cckconfig_MN.proto\022\003fsm\032\014nanopb.pr"
      "oto\032\036fsm_cckconfig_clientinfo.proto\"\"\n\010M"
      "N921_MB\022\026\n\016TimeOutputCall\030\001 \001(\r\"\"\n\010MN921"
      "_CB\022\026\n\016TimeOutputCall\030\001 \001(\r\"\252\001\n\tMN921_TC"
      "H\022\"\n\007typetch\030\001 \001(\0162\021.fsm.MN921TypeTCH\022\026\n"
      "\016TimeOutputCall\030\002 \001(\r\022\031\n\021MinTimeOutputCa"
      "ll\030\003 \001(\r\022\031\n\021MaxTimeOutputCall\030\004 \001(\r\022+\n\004o"
      "cfr\030\005 \001(\0162\035.fsm.MN921OutputCallFrequency"
      "\"/\n\tMN921_ATS\022\"\n\007typeats\030\001 \001(\0162\021.fsm.MN9"
      "21TypeATS\"%\n\013MN825_R168C\022\026\n\016TimeOutputCa"
      "ll\030\001 \001(\r\"\271\002\n\nMN_Channel\022\025\n\rself_sip_port"
      "\030\001 \001(\r\022\025\n\rself_rtp_port\030\002 \001(\r\022\027\n\017self_si"
      "p_number\030\003 \001(\r\022\016\n\006volume\030\004 \001(\r\022\"\n\007typede"
      "v\030\005 \001(\0162\021.fsm.MNTypeDevice\022 \n\021Subscriber"
      "ForCall\030\006 \003(\rB\005\222\?\002\020\004\022\031\n\002mb\030\007 \001(\0132\r.fsm.M"
      "N921_MB\022\031\n\002cb\030\010 \001(\0132\r.fsm.MN921_CB\022\033\n\003tc"
      "h\030\t \001(\0132\016.fsm.MN921_TCH\022\033\n\003ats\030\n \001(\0132\016.f"
      "sm.MN921_ATS\022\036\n\004r168\030\013 \001(\0132\020.fsm.MN825_R"
      "168C\"+\n\nMN825_R168\022\020\n\010r168port\030\001 \001(\r\022\013\n\003"
      "apd\030\002 \001(\r\"m\n\002MN\022\037\n\006client\030\001 \001(\0132\017.fsm.Cl"
      "ientInfo\022\035\n\004r168\030\002 \001(\0132\017.fsm.MN825_R168\022"
      "\'\n\007channel\030\003 \003(\0132\017.fsm.MN_ChannelB\005\222\?\002\020\002"
      "*I\n\014MNTypeDevice\022\006\n\002MB\020\000\022\006\n\002CB\020\001\022\007\n\003TCH\020"
      "\002\022\007\n\003ATS\020\003\022\010\n\004R168\020\004\022\r\n\tR168100KB\020\005*>\n\014M"
      "N921TypeTCH\022\013\n\007TwoWire\020\000\022\017\n\013FourWire_FL\020"
      "\001\022\020\n\014FourWire_TCH\020\002*1\n\030MN921OutputCallFr"
      "equency\022\t\n\005F_600\020\000\022\n\n\006F_2100\020\001*#\n\014MN921T"
      "ypeATS\022\t\n\005Pulse\020\000\022\010\n\004Tone\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "fsm_cckconfig_MN.proto", &protobuf_RegisterTypes);
  ::protobuf_nanopb_2eproto::AddDescriptors();
  ::protobuf_fsm_5fcckconfig_5fclientinfo_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_fsm_5fcckconfig_5fMN_2eproto
namespace fsm {
const ::google::protobuf::EnumDescriptor* MNTypeDevice_descriptor() {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_enum_descriptors[0];
}
bool MNTypeDevice_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MN921TypeTCH_descriptor() {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_enum_descriptors[1];
}
bool MN921TypeTCH_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MN921OutputCallFrequency_descriptor() {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_enum_descriptors[2];
}
bool MN921OutputCallFrequency_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MN921TypeATS_descriptor() {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_enum_descriptors[3];
}
bool MN921TypeATS_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MN921_MB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MN921_MB::kTimeOutputCallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MN921_MB::MN921_MB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_MB.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.MN921_MB)
}
MN921_MB::MN921_MB(const MN921_MB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeoutputcall_ = from.timeoutputcall_;
  // @@protoc_insertion_point(copy_constructor:fsm.MN921_MB)
}

void MN921_MB::SharedCtor() {
  timeoutputcall_ = 0u;
}

MN921_MB::~MN921_MB() {
  // @@protoc_insertion_point(destructor:fsm.MN921_MB)
  SharedDtor();
}

void MN921_MB::SharedDtor() {
}

void MN921_MB::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MN921_MB::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MN921_MB& MN921_MB::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_MB.base);
  return *internal_default_instance();
}


void MN921_MB::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.MN921_MB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeoutputcall_ = 0u;
  _internal_metadata_.Clear();
}

bool MN921_MB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.MN921_MB)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 TimeOutputCall = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeoutputcall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.MN921_MB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.MN921_MB)
  return false;
#undef DO_
}

void MN921_MB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.MN921_MB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timeoutputcall(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.MN921_MB)
}

::google::protobuf::uint8* MN921_MB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.MN921_MB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timeoutputcall(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.MN921_MB)
  return target;
}

size_t MN921_MB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.MN921_MB)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeoutputcall());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MN921_MB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.MN921_MB)
  GOOGLE_DCHECK_NE(&from, this);
  const MN921_MB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MN921_MB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.MN921_MB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.MN921_MB)
    MergeFrom(*source);
  }
}

void MN921_MB::MergeFrom(const MN921_MB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.MN921_MB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeoutputcall() != 0) {
    set_timeoutputcall(from.timeoutputcall());
  }
}

void MN921_MB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.MN921_MB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MN921_MB::CopyFrom(const MN921_MB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.MN921_MB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MN921_MB::IsInitialized() const {
  return true;
}

void MN921_MB::Swap(MN921_MB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MN921_MB::InternalSwap(MN921_MB* other) {
  using std::swap;
  swap(timeoutputcall_, other->timeoutputcall_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MN921_MB::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MN921_CB::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MN921_CB::kTimeOutputCallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MN921_CB::MN921_CB()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_CB.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.MN921_CB)
}
MN921_CB::MN921_CB(const MN921_CB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeoutputcall_ = from.timeoutputcall_;
  // @@protoc_insertion_point(copy_constructor:fsm.MN921_CB)
}

void MN921_CB::SharedCtor() {
  timeoutputcall_ = 0u;
}

MN921_CB::~MN921_CB() {
  // @@protoc_insertion_point(destructor:fsm.MN921_CB)
  SharedDtor();
}

void MN921_CB::SharedDtor() {
}

void MN921_CB::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MN921_CB::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MN921_CB& MN921_CB::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_CB.base);
  return *internal_default_instance();
}


void MN921_CB::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.MN921_CB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeoutputcall_ = 0u;
  _internal_metadata_.Clear();
}

bool MN921_CB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.MN921_CB)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 TimeOutputCall = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeoutputcall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.MN921_CB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.MN921_CB)
  return false;
#undef DO_
}

void MN921_CB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.MN921_CB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timeoutputcall(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.MN921_CB)
}

::google::protobuf::uint8* MN921_CB::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.MN921_CB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timeoutputcall(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.MN921_CB)
  return target;
}

size_t MN921_CB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.MN921_CB)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeoutputcall());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MN921_CB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.MN921_CB)
  GOOGLE_DCHECK_NE(&from, this);
  const MN921_CB* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MN921_CB>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.MN921_CB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.MN921_CB)
    MergeFrom(*source);
  }
}

void MN921_CB::MergeFrom(const MN921_CB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.MN921_CB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeoutputcall() != 0) {
    set_timeoutputcall(from.timeoutputcall());
  }
}

void MN921_CB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.MN921_CB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MN921_CB::CopyFrom(const MN921_CB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.MN921_CB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MN921_CB::IsInitialized() const {
  return true;
}

void MN921_CB::Swap(MN921_CB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MN921_CB::InternalSwap(MN921_CB* other) {
  using std::swap;
  swap(timeoutputcall_, other->timeoutputcall_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MN921_CB::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MN921_TCH::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MN921_TCH::kTypetchFieldNumber;
const int MN921_TCH::kTimeOutputCallFieldNumber;
const int MN921_TCH::kMinTimeOutputCallFieldNumber;
const int MN921_TCH::kMaxTimeOutputCallFieldNumber;
const int MN921_TCH::kOcfrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MN921_TCH::MN921_TCH()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_TCH.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.MN921_TCH)
}
MN921_TCH::MN921_TCH(const MN921_TCH& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&typetch_, &from.typetch_,
    static_cast<size_t>(reinterpret_cast<char*>(&ocfr_) -
    reinterpret_cast<char*>(&typetch_)) + sizeof(ocfr_));
  // @@protoc_insertion_point(copy_constructor:fsm.MN921_TCH)
}

void MN921_TCH::SharedCtor() {
  ::memset(&typetch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ocfr_) -
      reinterpret_cast<char*>(&typetch_)) + sizeof(ocfr_));
}

MN921_TCH::~MN921_TCH() {
  // @@protoc_insertion_point(destructor:fsm.MN921_TCH)
  SharedDtor();
}

void MN921_TCH::SharedDtor() {
}

void MN921_TCH::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MN921_TCH::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MN921_TCH& MN921_TCH::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_TCH.base);
  return *internal_default_instance();
}


void MN921_TCH::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.MN921_TCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&typetch_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ocfr_) -
      reinterpret_cast<char*>(&typetch_)) + sizeof(ocfr_));
  _internal_metadata_.Clear();
}

bool MN921_TCH::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.MN921_TCH)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .fsm.MN921TypeTCH typetch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_typetch(static_cast< ::fsm::MN921TypeTCH >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 TimeOutputCall = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeoutputcall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MinTimeOutputCall = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mintimeoutputcall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 MaxTimeOutputCall = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &maxtimeoutputcall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.MN921OutputCallFrequency ocfr = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ocfr(static_cast< ::fsm::MN921OutputCallFrequency >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.MN921_TCH)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.MN921_TCH)
  return false;
#undef DO_
}

void MN921_TCH::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.MN921_TCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.MN921TypeTCH typetch = 1;
  if (this->typetch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->typetch(), output);
  }

  // uint32 TimeOutputCall = 2;
  if (this->timeoutputcall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timeoutputcall(), output);
  }

  // uint32 MinTimeOutputCall = 3;
  if (this->mintimeoutputcall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->mintimeoutputcall(), output);
  }

  // uint32 MaxTimeOutputCall = 4;
  if (this->maxtimeoutputcall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->maxtimeoutputcall(), output);
  }

  // .fsm.MN921OutputCallFrequency ocfr = 5;
  if (this->ocfr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->ocfr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.MN921_TCH)
}

::google::protobuf::uint8* MN921_TCH::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.MN921_TCH)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.MN921TypeTCH typetch = 1;
  if (this->typetch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->typetch(), target);
  }

  // uint32 TimeOutputCall = 2;
  if (this->timeoutputcall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timeoutputcall(), target);
  }

  // uint32 MinTimeOutputCall = 3;
  if (this->mintimeoutputcall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->mintimeoutputcall(), target);
  }

  // uint32 MaxTimeOutputCall = 4;
  if (this->maxtimeoutputcall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->maxtimeoutputcall(), target);
  }

  // .fsm.MN921OutputCallFrequency ocfr = 5;
  if (this->ocfr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->ocfr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.MN921_TCH)
  return target;
}

size_t MN921_TCH::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.MN921_TCH)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .fsm.MN921TypeTCH typetch = 1;
  if (this->typetch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typetch());
  }

  // uint32 TimeOutputCall = 2;
  if (this->timeoutputcall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeoutputcall());
  }

  // uint32 MinTimeOutputCall = 3;
  if (this->mintimeoutputcall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->mintimeoutputcall());
  }

  // uint32 MaxTimeOutputCall = 4;
  if (this->maxtimeoutputcall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->maxtimeoutputcall());
  }

  // .fsm.MN921OutputCallFrequency ocfr = 5;
  if (this->ocfr() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ocfr());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MN921_TCH::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.MN921_TCH)
  GOOGLE_DCHECK_NE(&from, this);
  const MN921_TCH* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MN921_TCH>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.MN921_TCH)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.MN921_TCH)
    MergeFrom(*source);
  }
}

void MN921_TCH::MergeFrom(const MN921_TCH& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.MN921_TCH)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.typetch() != 0) {
    set_typetch(from.typetch());
  }
  if (from.timeoutputcall() != 0) {
    set_timeoutputcall(from.timeoutputcall());
  }
  if (from.mintimeoutputcall() != 0) {
    set_mintimeoutputcall(from.mintimeoutputcall());
  }
  if (from.maxtimeoutputcall() != 0) {
    set_maxtimeoutputcall(from.maxtimeoutputcall());
  }
  if (from.ocfr() != 0) {
    set_ocfr(from.ocfr());
  }
}

void MN921_TCH::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.MN921_TCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MN921_TCH::CopyFrom(const MN921_TCH& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.MN921_TCH)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MN921_TCH::IsInitialized() const {
  return true;
}

void MN921_TCH::Swap(MN921_TCH* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MN921_TCH::InternalSwap(MN921_TCH* other) {
  using std::swap;
  swap(typetch_, other->typetch_);
  swap(timeoutputcall_, other->timeoutputcall_);
  swap(mintimeoutputcall_, other->mintimeoutputcall_);
  swap(maxtimeoutputcall_, other->maxtimeoutputcall_);
  swap(ocfr_, other->ocfr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MN921_TCH::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MN921_ATS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MN921_ATS::kTypeatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MN921_ATS::MN921_ATS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_ATS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.MN921_ATS)
}
MN921_ATS::MN921_ATS(const MN921_ATS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  typeats_ = from.typeats_;
  // @@protoc_insertion_point(copy_constructor:fsm.MN921_ATS)
}

void MN921_ATS::SharedCtor() {
  typeats_ = 0;
}

MN921_ATS::~MN921_ATS() {
  // @@protoc_insertion_point(destructor:fsm.MN921_ATS)
  SharedDtor();
}

void MN921_ATS::SharedDtor() {
}

void MN921_ATS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MN921_ATS::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MN921_ATS& MN921_ATS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN921_ATS.base);
  return *internal_default_instance();
}


void MN921_ATS::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.MN921_ATS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typeats_ = 0;
  _internal_metadata_.Clear();
}

bool MN921_ATS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.MN921_ATS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .fsm.MN921TypeATS typeats = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_typeats(static_cast< ::fsm::MN921TypeATS >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.MN921_ATS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.MN921_ATS)
  return false;
#undef DO_
}

void MN921_ATS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.MN921_ATS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.MN921TypeATS typeats = 1;
  if (this->typeats() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->typeats(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.MN921_ATS)
}

::google::protobuf::uint8* MN921_ATS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.MN921_ATS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.MN921TypeATS typeats = 1;
  if (this->typeats() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->typeats(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.MN921_ATS)
  return target;
}

size_t MN921_ATS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.MN921_ATS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .fsm.MN921TypeATS typeats = 1;
  if (this->typeats() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typeats());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MN921_ATS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.MN921_ATS)
  GOOGLE_DCHECK_NE(&from, this);
  const MN921_ATS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MN921_ATS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.MN921_ATS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.MN921_ATS)
    MergeFrom(*source);
  }
}

void MN921_ATS::MergeFrom(const MN921_ATS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.MN921_ATS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.typeats() != 0) {
    set_typeats(from.typeats());
  }
}

void MN921_ATS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.MN921_ATS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MN921_ATS::CopyFrom(const MN921_ATS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.MN921_ATS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MN921_ATS::IsInitialized() const {
  return true;
}

void MN921_ATS::Swap(MN921_ATS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MN921_ATS::InternalSwap(MN921_ATS* other) {
  using std::swap;
  swap(typeats_, other->typeats_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MN921_ATS::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MN825_R168C::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MN825_R168C::kTimeOutputCallFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MN825_R168C::MN825_R168C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN825_R168C.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.MN825_R168C)
}
MN825_R168C::MN825_R168C(const MN825_R168C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  timeoutputcall_ = from.timeoutputcall_;
  // @@protoc_insertion_point(copy_constructor:fsm.MN825_R168C)
}

void MN825_R168C::SharedCtor() {
  timeoutputcall_ = 0u;
}

MN825_R168C::~MN825_R168C() {
  // @@protoc_insertion_point(destructor:fsm.MN825_R168C)
  SharedDtor();
}

void MN825_R168C::SharedDtor() {
}

void MN825_R168C::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MN825_R168C::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MN825_R168C& MN825_R168C::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN825_R168C.base);
  return *internal_default_instance();
}


void MN825_R168C::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.MN825_R168C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  timeoutputcall_ = 0u;
  _internal_metadata_.Clear();
}

bool MN825_R168C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.MN825_R168C)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 TimeOutputCall = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timeoutputcall_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.MN825_R168C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.MN825_R168C)
  return false;
#undef DO_
}

void MN825_R168C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.MN825_R168C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timeoutputcall(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.MN825_R168C)
}

::google::protobuf::uint8* MN825_R168C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.MN825_R168C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timeoutputcall(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.MN825_R168C)
  return target;
}

size_t MN825_R168C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.MN825_R168C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 TimeOutputCall = 1;
  if (this->timeoutputcall() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->timeoutputcall());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MN825_R168C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.MN825_R168C)
  GOOGLE_DCHECK_NE(&from, this);
  const MN825_R168C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MN825_R168C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.MN825_R168C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.MN825_R168C)
    MergeFrom(*source);
  }
}

void MN825_R168C::MergeFrom(const MN825_R168C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.MN825_R168C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.timeoutputcall() != 0) {
    set_timeoutputcall(from.timeoutputcall());
  }
}

void MN825_R168C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.MN825_R168C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MN825_R168C::CopyFrom(const MN825_R168C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.MN825_R168C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MN825_R168C::IsInitialized() const {
  return true;
}

void MN825_R168C::Swap(MN825_R168C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MN825_R168C::InternalSwap(MN825_R168C* other) {
  using std::swap;
  swap(timeoutputcall_, other->timeoutputcall_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MN825_R168C::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MN_Channel::InitAsDefaultInstance() {
  ::fsm::_MN_Channel_default_instance_._instance.get_mutable()->mb_ = const_cast< ::fsm::MN921_MB*>(
      ::fsm::MN921_MB::internal_default_instance());
  ::fsm::_MN_Channel_default_instance_._instance.get_mutable()->cb_ = const_cast< ::fsm::MN921_CB*>(
      ::fsm::MN921_CB::internal_default_instance());
  ::fsm::_MN_Channel_default_instance_._instance.get_mutable()->tch_ = const_cast< ::fsm::MN921_TCH*>(
      ::fsm::MN921_TCH::internal_default_instance());
  ::fsm::_MN_Channel_default_instance_._instance.get_mutable()->ats_ = const_cast< ::fsm::MN921_ATS*>(
      ::fsm::MN921_ATS::internal_default_instance());
  ::fsm::_MN_Channel_default_instance_._instance.get_mutable()->r168_ = const_cast< ::fsm::MN825_R168C*>(
      ::fsm::MN825_R168C::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MN_Channel::kSelfSipPortFieldNumber;
const int MN_Channel::kSelfRtpPortFieldNumber;
const int MN_Channel::kSelfSipNumberFieldNumber;
const int MN_Channel::kVolumeFieldNumber;
const int MN_Channel::kTypedevFieldNumber;
const int MN_Channel::kSubscriberForCallFieldNumber;
const int MN_Channel::kMbFieldNumber;
const int MN_Channel::kCbFieldNumber;
const int MN_Channel::kTchFieldNumber;
const int MN_Channel::kAtsFieldNumber;
const int MN_Channel::kR168FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MN_Channel::MN_Channel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN_Channel.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.MN_Channel)
}
MN_Channel::MN_Channel(const MN_Channel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subscriberforcall_(from.subscriberforcall_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mb()) {
    mb_ = new ::fsm::MN921_MB(*from.mb_);
  } else {
    mb_ = NULL;
  }
  if (from.has_cb()) {
    cb_ = new ::fsm::MN921_CB(*from.cb_);
  } else {
    cb_ = NULL;
  }
  if (from.has_tch()) {
    tch_ = new ::fsm::MN921_TCH(*from.tch_);
  } else {
    tch_ = NULL;
  }
  if (from.has_ats()) {
    ats_ = new ::fsm::MN921_ATS(*from.ats_);
  } else {
    ats_ = NULL;
  }
  if (from.has_r168()) {
    r168_ = new ::fsm::MN825_R168C(*from.r168_);
  } else {
    r168_ = NULL;
  }
  ::memcpy(&self_sip_port_, &from.self_sip_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&typedev_) -
    reinterpret_cast<char*>(&self_sip_port_)) + sizeof(typedev_));
  // @@protoc_insertion_point(copy_constructor:fsm.MN_Channel)
}

void MN_Channel::SharedCtor() {
  ::memset(&mb_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typedev_) -
      reinterpret_cast<char*>(&mb_)) + sizeof(typedev_));
}

MN_Channel::~MN_Channel() {
  // @@protoc_insertion_point(destructor:fsm.MN_Channel)
  SharedDtor();
}

void MN_Channel::SharedDtor() {
  if (this != internal_default_instance()) delete mb_;
  if (this != internal_default_instance()) delete cb_;
  if (this != internal_default_instance()) delete tch_;
  if (this != internal_default_instance()) delete ats_;
  if (this != internal_default_instance()) delete r168_;
}

void MN_Channel::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MN_Channel::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MN_Channel& MN_Channel::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN_Channel.base);
  return *internal_default_instance();
}


void MN_Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.MN_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriberforcall_.Clear();
  if (GetArenaNoVirtual() == NULL && mb_ != NULL) {
    delete mb_;
  }
  mb_ = NULL;
  if (GetArenaNoVirtual() == NULL && cb_ != NULL) {
    delete cb_;
  }
  cb_ = NULL;
  if (GetArenaNoVirtual() == NULL && tch_ != NULL) {
    delete tch_;
  }
  tch_ = NULL;
  if (GetArenaNoVirtual() == NULL && ats_ != NULL) {
    delete ats_;
  }
  ats_ = NULL;
  if (GetArenaNoVirtual() == NULL && r168_ != NULL) {
    delete r168_;
  }
  r168_ = NULL;
  ::memset(&self_sip_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typedev_) -
      reinterpret_cast<char*>(&self_sip_port_)) + sizeof(typedev_));
  _internal_metadata_.Clear();
}

bool MN_Channel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.MN_Channel)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 self_sip_port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &self_sip_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 self_rtp_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &self_rtp_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 self_sip_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &self_sip_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 volume = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.MNTypeDevice typedev = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_typedev(static_cast< ::fsm::MNTypeDevice >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 SubscriberForCall = 6 [(.nanopb) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_subscriberforcall())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 50u, input, this->mutable_subscriberforcall())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.MN921_MB mb = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.MN921_CB cb = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.MN921_TCH tch = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.MN921_ATS ats = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.MN825_R168C r168 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_r168()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.MN_Channel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.MN_Channel)
  return false;
#undef DO_
}

void MN_Channel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.MN_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 self_sip_port = 1;
  if (this->self_sip_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->self_sip_port(), output);
  }

  // uint32 self_rtp_port = 2;
  if (this->self_rtp_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->self_rtp_port(), output);
  }

  // uint32 self_sip_number = 3;
  if (this->self_sip_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->self_sip_number(), output);
  }

  // uint32 volume = 4;
  if (this->volume() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->volume(), output);
  }

  // .fsm.MNTypeDevice typedev = 5;
  if (this->typedev() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->typedev(), output);
  }

  // repeated uint32 SubscriberForCall = 6 [(.nanopb) = {
  if (this->subscriberforcall_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _subscriberforcall_cached_byte_size_));
  }
  for (int i = 0, n = this->subscriberforcall_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->subscriberforcall(i), output);
  }

  // .fsm.MN921_MB mb = 7;
  if (this->has_mb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_mb(), output);
  }

  // .fsm.MN921_CB cb = 8;
  if (this->has_cb()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_cb(), output);
  }

  // .fsm.MN921_TCH tch = 9;
  if (this->has_tch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_tch(), output);
  }

  // .fsm.MN921_ATS ats = 10;
  if (this->has_ats()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_ats(), output);
  }

  // .fsm.MN825_R168C r168 = 11;
  if (this->has_r168()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_r168(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.MN_Channel)
}

::google::protobuf::uint8* MN_Channel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.MN_Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 self_sip_port = 1;
  if (this->self_sip_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->self_sip_port(), target);
  }

  // uint32 self_rtp_port = 2;
  if (this->self_rtp_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->self_rtp_port(), target);
  }

  // uint32 self_sip_number = 3;
  if (this->self_sip_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->self_sip_number(), target);
  }

  // uint32 volume = 4;
  if (this->volume() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->volume(), target);
  }

  // .fsm.MNTypeDevice typedev = 5;
  if (this->typedev() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->typedev(), target);
  }

  // repeated uint32 SubscriberForCall = 6 [(.nanopb) = {
  if (this->subscriberforcall_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _subscriberforcall_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->subscriberforcall_, target);
  }

  // .fsm.MN921_MB mb = 7;
  if (this->has_mb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_mb(), deterministic, target);
  }

  // .fsm.MN921_CB cb = 8;
  if (this->has_cb()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_cb(), deterministic, target);
  }

  // .fsm.MN921_TCH tch = 9;
  if (this->has_tch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_tch(), deterministic, target);
  }

  // .fsm.MN921_ATS ats = 10;
  if (this->has_ats()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_ats(), deterministic, target);
  }

  // .fsm.MN825_R168C r168 = 11;
  if (this->has_r168()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_r168(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.MN_Channel)
  return target;
}

size_t MN_Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.MN_Channel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint32 SubscriberForCall = 6 [(.nanopb) = {
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->subscriberforcall_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _subscriberforcall_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .fsm.MN921_MB mb = 7;
  if (this->has_mb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mb_);
  }

  // .fsm.MN921_CB cb = 8;
  if (this->has_cb()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cb_);
  }

  // .fsm.MN921_TCH tch = 9;
  if (this->has_tch()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tch_);
  }

  // .fsm.MN921_ATS ats = 10;
  if (this->has_ats()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ats_);
  }

  // .fsm.MN825_R168C r168 = 11;
  if (this->has_r168()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *r168_);
  }

  // uint32 self_sip_port = 1;
  if (this->self_sip_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->self_sip_port());
  }

  // uint32 self_rtp_port = 2;
  if (this->self_rtp_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->self_rtp_port());
  }

  // uint32 self_sip_number = 3;
  if (this->self_sip_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->self_sip_number());
  }

  // uint32 volume = 4;
  if (this->volume() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->volume());
  }

  // .fsm.MNTypeDevice typedev = 5;
  if (this->typedev() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->typedev());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MN_Channel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.MN_Channel)
  GOOGLE_DCHECK_NE(&from, this);
  const MN_Channel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MN_Channel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.MN_Channel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.MN_Channel)
    MergeFrom(*source);
  }
}

void MN_Channel::MergeFrom(const MN_Channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.MN_Channel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscriberforcall_.MergeFrom(from.subscriberforcall_);
  if (from.has_mb()) {
    mutable_mb()->::fsm::MN921_MB::MergeFrom(from.mb());
  }
  if (from.has_cb()) {
    mutable_cb()->::fsm::MN921_CB::MergeFrom(from.cb());
  }
  if (from.has_tch()) {
    mutable_tch()->::fsm::MN921_TCH::MergeFrom(from.tch());
  }
  if (from.has_ats()) {
    mutable_ats()->::fsm::MN921_ATS::MergeFrom(from.ats());
  }
  if (from.has_r168()) {
    mutable_r168()->::fsm::MN825_R168C::MergeFrom(from.r168());
  }
  if (from.self_sip_port() != 0) {
    set_self_sip_port(from.self_sip_port());
  }
  if (from.self_rtp_port() != 0) {
    set_self_rtp_port(from.self_rtp_port());
  }
  if (from.self_sip_number() != 0) {
    set_self_sip_number(from.self_sip_number());
  }
  if (from.volume() != 0) {
    set_volume(from.volume());
  }
  if (from.typedev() != 0) {
    set_typedev(from.typedev());
  }
}

void MN_Channel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.MN_Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MN_Channel::CopyFrom(const MN_Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.MN_Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MN_Channel::IsInitialized() const {
  return true;
}

void MN_Channel::Swap(MN_Channel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MN_Channel::InternalSwap(MN_Channel* other) {
  using std::swap;
  subscriberforcall_.InternalSwap(&other->subscriberforcall_);
  swap(mb_, other->mb_);
  swap(cb_, other->cb_);
  swap(tch_, other->tch_);
  swap(ats_, other->ats_);
  swap(r168_, other->r168_);
  swap(self_sip_port_, other->self_sip_port_);
  swap(self_rtp_port_, other->self_rtp_port_);
  swap(self_sip_number_, other->self_sip_number_);
  swap(volume_, other->volume_);
  swap(typedev_, other->typedev_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MN_Channel::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MN825_R168::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MN825_R168::kR168PortFieldNumber;
const int MN825_R168::kApdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MN825_R168::MN825_R168()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN825_R168.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.MN825_R168)
}
MN825_R168::MN825_R168(const MN825_R168& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&r168port_, &from.r168port_,
    static_cast<size_t>(reinterpret_cast<char*>(&apd_) -
    reinterpret_cast<char*>(&r168port_)) + sizeof(apd_));
  // @@protoc_insertion_point(copy_constructor:fsm.MN825_R168)
}

void MN825_R168::SharedCtor() {
  ::memset(&r168port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apd_) -
      reinterpret_cast<char*>(&r168port_)) + sizeof(apd_));
}

MN825_R168::~MN825_R168() {
  // @@protoc_insertion_point(destructor:fsm.MN825_R168)
  SharedDtor();
}

void MN825_R168::SharedDtor() {
}

void MN825_R168::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MN825_R168::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MN825_R168& MN825_R168::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN825_R168.base);
  return *internal_default_instance();
}


void MN825_R168::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.MN825_R168)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&r168port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&apd_) -
      reinterpret_cast<char*>(&r168port_)) + sizeof(apd_));
  _internal_metadata_.Clear();
}

bool MN825_R168::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.MN825_R168)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 r168port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &r168port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 apd = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &apd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.MN825_R168)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.MN825_R168)
  return false;
#undef DO_
}

void MN825_R168::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.MN825_R168)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 r168port = 1;
  if (this->r168port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->r168port(), output);
  }

  // uint32 apd = 2;
  if (this->apd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->apd(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.MN825_R168)
}

::google::protobuf::uint8* MN825_R168::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.MN825_R168)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 r168port = 1;
  if (this->r168port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->r168port(), target);
  }

  // uint32 apd = 2;
  if (this->apd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->apd(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.MN825_R168)
  return target;
}

size_t MN825_R168::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.MN825_R168)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 r168port = 1;
  if (this->r168port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->r168port());
  }

  // uint32 apd = 2;
  if (this->apd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->apd());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MN825_R168::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.MN825_R168)
  GOOGLE_DCHECK_NE(&from, this);
  const MN825_R168* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MN825_R168>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.MN825_R168)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.MN825_R168)
    MergeFrom(*source);
  }
}

void MN825_R168::MergeFrom(const MN825_R168& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.MN825_R168)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.r168port() != 0) {
    set_r168port(from.r168port());
  }
  if (from.apd() != 0) {
    set_apd(from.apd());
  }
}

void MN825_R168::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.MN825_R168)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MN825_R168::CopyFrom(const MN825_R168& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.MN825_R168)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MN825_R168::IsInitialized() const {
  return true;
}

void MN825_R168::Swap(MN825_R168* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MN825_R168::InternalSwap(MN825_R168* other) {
  using std::swap;
  swap(r168port_, other->r168port_);
  swap(apd_, other->apd_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MN825_R168::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MN::InitAsDefaultInstance() {
  ::fsm::_MN_default_instance_._instance.get_mutable()->client_ = const_cast< ::fsm::ClientInfo*>(
      ::fsm::ClientInfo::internal_default_instance());
  ::fsm::_MN_default_instance_._instance.get_mutable()->r168_ = const_cast< ::fsm::MN825_R168*>(
      ::fsm::MN825_R168::internal_default_instance());
}
void MN::clear_client() {
  if (GetArenaNoVirtual() == NULL && client_ != NULL) {
    delete client_;
  }
  client_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MN::kClientFieldNumber;
const int MN::kR168FieldNumber;
const int MN::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MN::MN()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:fsm.MN)
}
MN::MN(const MN& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_(from.channel_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_client()) {
    client_ = new ::fsm::ClientInfo(*from.client_);
  } else {
    client_ = NULL;
  }
  if (from.has_r168()) {
    r168_ = new ::fsm::MN825_R168(*from.r168_);
  } else {
    r168_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fsm.MN)
}

void MN::SharedCtor() {
  ::memset(&client_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&r168_) -
      reinterpret_cast<char*>(&client_)) + sizeof(r168_));
}

MN::~MN() {
  // @@protoc_insertion_point(destructor:fsm.MN)
  SharedDtor();
}

void MN::SharedDtor() {
  if (this != internal_default_instance()) delete client_;
  if (this != internal_default_instance()) delete r168_;
}

void MN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MN::descriptor() {
  ::protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MN& MN::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_fsm_5fcckconfig_5fMN_2eproto::scc_info_MN.base);
  return *internal_default_instance();
}


void MN::Clear() {
// @@protoc_insertion_point(message_clear_start:fsm.MN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.Clear();
  if (GetArenaNoVirtual() == NULL && client_ != NULL) {
    delete client_;
  }
  client_ = NULL;
  if (GetArenaNoVirtual() == NULL && r168_ != NULL) {
    delete r168_;
  }
  r168_ = NULL;
  _internal_metadata_.Clear();
}

bool MN::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fsm.MN)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .fsm.ClientInfo client = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .fsm.MN825_R168 r168 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_r168()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fsm.MN_Channel channel = 3 [(.nanopb) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fsm.MN)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fsm.MN)
  return false;
#undef DO_
}

void MN::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fsm.MN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.ClientInfo client = 1;
  if (this->has_client()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_client(), output);
  }

  // .fsm.MN825_R168 r168 = 2;
  if (this->has_r168()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_r168(), output);
  }

  // repeated .fsm.MN_Channel channel = 3 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->channel(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:fsm.MN)
}

::google::protobuf::uint8* MN::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fsm.MN)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .fsm.ClientInfo client = 1;
  if (this->has_client()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_client(), deterministic, target);
  }

  // .fsm.MN825_R168 r168 = 2;
  if (this->has_r168()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_r168(), deterministic, target);
  }

  // repeated .fsm.MN_Channel channel = 3 [(.nanopb) = {
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fsm.MN)
  return target;
}

size_t MN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fsm.MN)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .fsm.MN_Channel channel = 3 [(.nanopb) = {
  {
    unsigned int count = static_cast<unsigned int>(this->channel_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel(static_cast<int>(i)));
    }
  }

  // .fsm.ClientInfo client = 1;
  if (this->has_client()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_);
  }

  // .fsm.MN825_R168 r168 = 2;
  if (this->has_r168()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *r168_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MN::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fsm.MN)
  GOOGLE_DCHECK_NE(&from, this);
  const MN* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MN>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fsm.MN)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fsm.MN)
    MergeFrom(*source);
  }
}

void MN::MergeFrom(const MN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fsm.MN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_.MergeFrom(from.channel_);
  if (from.has_client()) {
    mutable_client()->::fsm::ClientInfo::MergeFrom(from.client());
  }
  if (from.has_r168()) {
    mutable_r168()->::fsm::MN825_R168::MergeFrom(from.r168());
  }
}

void MN::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fsm.MN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MN::CopyFrom(const MN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fsm.MN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MN::IsInitialized() const {
  return true;
}

void MN::Swap(MN* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MN::InternalSwap(MN* other) {
  using std::swap;
  CastToBase(&channel_)->InternalSwap(CastToBase(&other->channel_));
  swap(client_, other->client_);
  swap(r168_, other->r168_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MN::GetMetadata() const {
  protobuf_fsm_5fcckconfig_5fMN_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_fsm_5fcckconfig_5fMN_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fsm
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::MN921_MB* Arena::CreateMaybeMessage< ::fsm::MN921_MB >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::MN921_MB >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::MN921_CB* Arena::CreateMaybeMessage< ::fsm::MN921_CB >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::MN921_CB >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::MN921_TCH* Arena::CreateMaybeMessage< ::fsm::MN921_TCH >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::MN921_TCH >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::MN921_ATS* Arena::CreateMaybeMessage< ::fsm::MN921_ATS >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::MN921_ATS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::MN825_R168C* Arena::CreateMaybeMessage< ::fsm::MN825_R168C >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::MN825_R168C >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::MN_Channel* Arena::CreateMaybeMessage< ::fsm::MN_Channel >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::MN_Channel >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::MN825_R168* Arena::CreateMaybeMessage< ::fsm::MN825_R168 >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::MN825_R168 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::fsm::MN* Arena::CreateMaybeMessage< ::fsm::MN >(Arena* arena) {
  return Arena::CreateInternal< ::fsm::MN >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
